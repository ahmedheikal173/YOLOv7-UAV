// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_ref_conv_ref_Pipeline_conv_ref_label3_VITIS_LOOP_31_4_conv_ref_label2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_conv_address0,
        output_conv_ce0,
        output_conv_we0,
        output_conv_d0,
        output_conv_q0,
        weights_address0,
        weights_ce0,
        weights_q0,
        weights_address1,
        weights_ce1,
        weights_q1,
        image_padded_V_address0,
        image_padded_V_ce0,
        image_padded_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [23:0] output_conv_address0;
output   output_conv_ce0;
output   output_conv_we0;
output  [7:0] output_conv_d0;
input  [7:0] output_conv_q0;
output  [9:0] weights_address0;
output   weights_ce0;
input  [7:0] weights_q0;
output  [9:0] weights_address1;
output   weights_ce1;
input  [7:0] weights_q1;
output  [20:0] image_padded_V_address0;
output   image_padded_V_ce0;
input  [7:0] image_padded_V_q0;

reg ap_idle;
reg[23:0] output_conv_address0;
reg output_conv_ce0;
reg output_conv_we0;
reg[9:0] weights_address0;
reg weights_ce0;
reg[9:0] weights_address1;
reg weights_ce1;
reg[20:0] image_padded_V_address0;
reg image_padded_V_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln27_reg_1463;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
reg  signed [7:0] reg_327;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln27_fu_374_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [4:0] select_ln27_1_fu_421_p3;
reg   [4:0] select_ln27_1_reg_1467;
wire   [9:0] zext_ln29_fu_429_p1;
reg   [9:0] zext_ln29_reg_1472;
wire   [0:0] or_ln29_fu_469_p2;
reg   [0:0] or_ln29_reg_1483;
wire   [9:0] select_ln29_1_fu_475_p3;
reg   [9:0] select_ln29_1_reg_1490;
wire   [0:0] and_ln29_fu_495_p2;
reg   [0:0] and_ln29_reg_1496;
wire   [0:0] or_ln31_1_fu_507_p2;
reg   [0:0] or_ln31_1_reg_1503;
wire   [9:0] mul_ln1171_fu_525_p2;
reg   [9:0] mul_ln1171_reg_1508;
wire   [0:0] icmp_ln35_1_fu_575_p2;
reg   [0:0] icmp_ln35_1_reg_1534;
reg   [0:0] icmp_ln35_1_reg_1534_pp0_iter1_reg;
reg  signed [7:0] weights_load_1_reg_1548;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg  signed [7:0] weights_load_2_reg_1563;
reg  signed [7:0] weights_load_3_reg_1568;
wire   [23:0] add_ln712_3_fu_829_p2;
reg   [23:0] add_ln712_3_reg_1573;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] add_ln1171_16_fu_904_p2;
reg   [9:0] add_ln1171_16_reg_1588;
wire   [20:0] sub_ln42_fu_930_p2;
reg   [20:0] sub_ln42_reg_1593;
wire   [20:0] sub_ln42_1_fu_962_p2;
reg   [20:0] sub_ln42_1_reg_1604;
wire   [20:0] sub_ln42_2_fu_989_p2;
reg   [20:0] sub_ln42_2_reg_1611;
reg  signed [7:0] weights_load_4_reg_1618;
reg  signed [7:0] weights_load_5_reg_1623;
reg  signed [7:0] weights_load_7_reg_1648;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg  signed [7:0] weights_load_8_reg_1668;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_pp0_stage8_11001;
reg   [23:0] output_conv_addr_reg_1733;
reg   [7:0] output_conv_load_reg_1778;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln1171_1_fu_537_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1171_2_fu_554_p1;
wire   [63:0] zext_ln1171_3_fu_655_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1171_4_fu_670_p1;
wire   [63:0] zext_ln1171_5_fu_685_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln1171_6_fu_700_p1;
wire   [63:0] zext_ln1171_7_fu_879_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln1171_8_fu_894_p1;
wire   [63:0] zext_ln42_2_fu_936_p1;
wire   [63:0] zext_ln1171_9_fu_1000_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln42_3_fu_1009_p1;
wire   [63:0] zext_ln42_4_fu_1027_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln42_6_fu_1042_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln42_7_fu_1073_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln42_8_fu_1107_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln712_4_fu_1136_p1;
wire   [63:0] zext_ln42_10_fu_1140_p1;
wire   [63:0] zext_ln42_11_fu_1173_p1;
wire   [63:0] zext_ln42_12_fu_1208_p1;
reg   [7:0] lhs_fu_124;
wire   [7:0] sum_V_fu_1295_p4;
reg   [7:0] ap_sig_allocacmp_lhs_load;
wire    ap_loop_init;
reg   [1:0] r_fu_128;
wire   [1:0] add_ln35_fu_569_p2;
reg   [9:0] j_fu_132;
wire   [9:0] select_ln31_1_fu_778_p3;
reg   [11:0] indvar_flatten46_fu_136;
wire   [11:0] select_ln31_5_fu_593_p3;
reg   [9:0] i_fu_140;
reg   [20:0] indvar_flatten69_fu_144;
wire   [20:0] select_ln29_4_fu_607_p3;
reg   [4:0] p_fu_148;
reg   [24:0] indvar_flatten100_fu_152;
wire   [24:0] add_ln27_1_fu_380_p2;
wire   [0:0] icmp_ln29_fu_407_p2;
wire   [4:0] add_ln27_fu_401_p2;
wire   [0:0] icmp_ln35_fu_439_p2;
wire   [0:0] xor_ln27_fu_433_p2;
wire   [0:0] icmp_ln31_fu_451_p2;
wire   [9:0] select_ln27_fu_413_p3;
wire   [0:0] and_ln27_1_fu_457_p2;
wire   [9:0] add_ln29_fu_463_p2;
wire   [0:0] xor_ln29_fu_483_p2;
wire   [0:0] and_ln27_fu_445_p2;
wire   [0:0] or_ln29_1_fu_489_p2;
wire   [0:0] or_ln31_fu_501_p2;
wire   [1:0] select_ln31_fu_513_p3;
wire   [1:0] mul_ln1171_fu_525_p0;
wire   [9:0] zext_ln1171_fu_521_p1;
wire   [8:0] mul_ln1171_fu_525_p1;
wire   [9:0] add_ln1171_fu_531_p2;
wire   [9:0] add_ln1171_1_fu_542_p2;
wire   [9:0] add_ln1171_2_fu_548_p2;
wire   [9:0] empty_11_fu_559_p2;
wire   [11:0] add_ln31_fu_587_p2;
wire   [20:0] add_ln29_1_fu_601_p2;
wire   [9:0] add_ln1171_3_fu_645_p2;
wire   [9:0] add_ln1171_4_fu_650_p2;
wire   [9:0] add_ln1171_5_fu_660_p2;
wire   [9:0] add_ln1171_6_fu_665_p2;
wire   [9:0] add_ln1171_7_fu_675_p2;
wire   [9:0] add_ln1171_8_fu_680_p2;
wire   [9:0] add_ln1171_9_fu_690_p2;
wire   [9:0] add_ln1171_10_fu_695_p2;
wire   [18:0] tmp_fu_730_p3;
wire   [16:0] tmp_2_fu_741_p3;
wire   [60:0] zext_ln712_fu_737_p1;
wire   [60:0] zext_ln712_1_fu_748_p1;
wire   [9:0] indvars_iv_next270_fu_708_p2;
wire   [9:0] empty_fu_714_p2;
wire   [9:0] select_ln29_fu_723_p3;
wire   [9:0] indvars_iv_next270_dup_fu_772_p2;
wire   [60:0] add_ln712_1_fu_752_p2;
wire   [60:0] zext_ln712_3_fu_789_p1;
wire   [60:0] add_ln712_2_fu_793_p2;
wire   [18:0] trunc_ln712_fu_799_p1;
wire   [20:0] trunc_ln712_1_fu_811_p1;
wire   [23:0] p_shl9_cast_fu_803_p3;
wire   [23:0] p_shl10_cast_fu_815_p3;
wire   [23:0] sub_ln712_fu_823_p2;
wire   [23:0] zext_ln29_1_fu_720_p1;
wire   [9:0] indvars_iv_next270_mid1_fu_835_p2;
wire   [9:0] select_ln29_2_fu_758_p3;
wire   [9:0] select_ln31_2_fu_841_p3;
wire   [9:0] p_mid1_fu_852_p2;
wire   [9:0] select_ln29_3_fu_765_p3;
wire   [9:0] select_ln31_3_fu_858_p3;
wire   [9:0] add_ln1171_11_fu_869_p2;
wire   [9:0] add_ln1171_12_fu_874_p2;
wire   [9:0] add_ln1171_13_fu_884_p2;
wire   [9:0] add_ln1171_14_fu_889_p2;
wire   [9:0] add_ln1171_15_fu_899_p2;
wire   [19:0] add_ln42_fu_909_p0;
wire  signed [19:0] grp_fu_1315_p2;
wire   [19:0] zext_ln712_2_fu_785_p1;
(* use_dsp48 = "no" *) wire   [19:0] add_ln42_fu_909_p2;
wire   [18:0] trunc_ln42_fu_918_p1;
wire   [20:0] p_shl8_cast_fu_922_p3;
wire   [20:0] zext_ln42_1_fu_914_p1;
wire   [19:0] add_ln42_3_fu_941_p0;
wire   [19:0] select_ln31_2_cast_fu_848_p1;
(* use_dsp48 = "no" *) wire   [19:0] add_ln42_3_fu_941_p2;
wire   [18:0] trunc_ln42_1_fu_950_p1;
wire   [20:0] p_shl7_cast_fu_954_p3;
wire   [20:0] zext_ln42_5_fu_946_p1;
wire   [19:0] add_ln42_6_fu_968_p0;
wire   [19:0] zext_ln31_fu_865_p1;
(* use_dsp48 = "no" *) wire   [19:0] add_ln42_6_fu_968_p2;
wire   [18:0] trunc_ln42_2_fu_977_p1;
wire   [20:0] p_shl6_cast_fu_981_p3;
wire   [20:0] zext_ln42_9_fu_973_p1;
wire   [20:0] add_ln42_1_fu_1004_p2;
wire   [20:0] add_ln42_2_fu_1022_p2;
wire   [7:0] select_ln31_4_fu_1046_p3;
wire   [20:0] add_ln42_4_fu_1068_p2;
wire  signed [15:0] tmp_s_fu_1078_p1;
wire   [15:0] grp_fu_1324_p3;
wire   [7:0] tmp_s_fu_1078_p4;
wire   [20:0] add_ln42_5_fu_1102_p2;
wire  signed [15:0] tmp_1_fu_1112_p1;
wire   [15:0] grp_fu_1333_p3;
wire   [7:0] tmp_1_fu_1112_p4;
wire  signed [15:0] tmp_3_fu_1144_p1;
wire   [15:0] grp_fu_1342_p3;
wire   [7:0] tmp_3_fu_1144_p4;
wire   [20:0] add_ln42_7_fu_1168_p2;
wire  signed [15:0] tmp_4_fu_1178_p1;
wire   [15:0] grp_fu_1351_p3;
wire   [7:0] tmp_4_fu_1178_p4;
wire   [20:0] add_ln42_8_fu_1203_p2;
wire  signed [15:0] tmp_5_fu_1213_p1;
wire   [15:0] grp_fu_1360_p3;
wire   [7:0] tmp_5_fu_1213_p4;
wire  signed [15:0] tmp_6_fu_1237_p1;
wire   [15:0] grp_fu_1369_p3;
wire   [7:0] tmp_6_fu_1237_p4;
wire  signed [15:0] tmp_7_fu_1261_p1;
wire   [15:0] grp_fu_1378_p3;
wire   [7:0] tmp_7_fu_1261_p4;
wire  signed [15:0] tmp_8_fu_1278_p1;
wire   [15:0] grp_fu_1387_p3;
wire   [7:0] tmp_8_fu_1278_p4;
wire  signed [15:0] sum_V_fu_1295_p1;
wire   [15:0] grp_fu_1396_p3;
wire   [9:0] grp_fu_1315_p0;
wire   [9:0] grp_fu_1315_p1;
wire   [15:0] grp_fu_1324_p2;
wire   [15:0] grp_fu_1333_p2;
wire   [15:0] grp_fu_1342_p2;
wire   [15:0] grp_fu_1351_p2;
wire   [15:0] grp_fu_1360_p2;
wire   [15:0] grp_fu_1369_p2;
wire   [15:0] grp_fu_1378_p2;
wire   [15:0] grp_fu_1387_p2;
wire   [15:0] grp_fu_1396_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [19:0] grp_fu_1315_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

conv_ref_mul_2ns_9ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 10 ))
mul_2ns_9ns_10_1_1_U7(
    .din0(mul_ln1171_fu_525_p0),
    .din1(mul_ln1171_fu_525_p1),
    .dout(mul_ln1171_fu_525_p2)
);

conv_ref_mul_mul_10ns_10ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_mul_10ns_10ns_20_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1315_p0),
    .din1(grp_fu_1315_p1),
    .ce(1'b1),
    .dout(grp_fu_1315_p2)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_327),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1324_p2),
    .ce(1'b1),
    .dout(grp_fu_1324_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_1_reg_1548),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1333_p2),
    .ce(1'b1),
    .dout(grp_fu_1333_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_2_reg_1563),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1342_p2),
    .ce(1'b1),
    .dout(grp_fu_1342_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_3_reg_1568),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1351_p2),
    .ce(1'b1),
    .dout(grp_fu_1351_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_4_reg_1618),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1360_p2),
    .ce(1'b1),
    .dout(grp_fu_1360_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_5_reg_1623),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1369_p2),
    .ce(1'b1),
    .dout(grp_fu_1369_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_327),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1378_p2),
    .ce(1'b1),
    .dout(grp_fu_1378_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_7_reg_1648),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1387_p2),
    .ce(1'b1),
    .dout(grp_fu_1387_p3)
);

conv_ref_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(weights_load_8_reg_1668),
    .din1(image_padded_V_q0),
    .din2(grp_fu_1396_p2),
    .ce(1'b1),
    .dout(grp_fu_1396_p3)
);

conv_ref_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_140 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        i_fu_140 <= select_ln29_1_fu_475_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten100_fu_152 <= 25'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        indvar_flatten100_fu_152 <= add_ln27_1_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten46_fu_136 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        indvar_flatten46_fu_136 <= select_ln31_5_fu_593_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten69_fu_144 <= 21'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        indvar_flatten69_fu_144 <= select_ln29_4_fu_607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_132 <= 10'd0;
    end else if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        j_fu_132 <= select_ln31_1_fu_778_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_fu_124 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        lhs_fu_124 <= {{sum_V_fu_1295_p1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_fu_148 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        p_fu_148 <= select_ln27_1_fu_421_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_fu_128 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        r_fu_128 <= add_ln35_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln1171_16_reg_1588 <= add_ln1171_16_fu_904_p2;
        add_ln712_3_reg_1573 <= add_ln712_3_fu_829_p2;
        sub_ln42_1_reg_1604 <= sub_ln42_1_fu_962_p2;
        sub_ln42_2_reg_1611 <= sub_ln42_2_fu_989_p2;
        sub_ln42_reg_1593 <= sub_ln42_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln27_fu_374_p2 == 1'd0))) begin
        and_ln29_reg_1496 <= and_ln29_fu_495_p2;
        icmp_ln35_1_reg_1534 <= icmp_ln35_1_fu_575_p2;
        mul_ln1171_reg_1508 <= mul_ln1171_fu_525_p2;
        or_ln29_reg_1483 <= or_ln29_fu_469_p2;
        or_ln31_1_reg_1503 <= or_ln31_1_fu_507_p2;
        select_ln27_1_reg_1467 <= select_ln27_1_fu_421_p3;
        select_ln29_1_reg_1490 <= select_ln29_1_fu_475_p3;
        zext_ln29_reg_1472[4 : 0] <= zext_ln29_fu_429_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln27_reg_1463 <= icmp_ln27_fu_374_p2;
        icmp_ln35_1_reg_1534_pp0_iter1_reg <= icmp_ln35_1_reg_1534;
        output_conv_addr_reg_1733 <= zext_ln712_4_fu_1136_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln35_1_reg_1534_pp0_iter1_reg == 1'd1))) begin
        output_conv_load_reg_1778 <= output_conv_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_327 <= weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weights_load_1_reg_1548 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weights_load_2_reg_1563 <= weights_q1;
        weights_load_3_reg_1568 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        weights_load_4_reg_1618 <= weights_q1;
        weights_load_5_reg_1623 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        weights_load_7_reg_1648 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1463 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        weights_load_8_reg_1668 <= weights_q0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1463 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_sig_allocacmp_lhs_load = {{sum_V_fu_1295_p1[15:8]}};
    end else begin
        ap_sig_allocacmp_lhs_load = lhs_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        image_padded_V_address0 = zext_ln42_12_fu_1208_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_padded_V_address0 = zext_ln42_11_fu_1173_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_padded_V_address0 = zext_ln42_10_fu_1140_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_padded_V_address0 = zext_ln42_8_fu_1107_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        image_padded_V_address0 = zext_ln42_7_fu_1073_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        image_padded_V_address0 = zext_ln42_6_fu_1042_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        image_padded_V_address0 = zext_ln42_4_fu_1027_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        image_padded_V_address0 = zext_ln42_3_fu_1009_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        image_padded_V_address0 = zext_ln42_2_fu_936_p1;
    end else begin
        image_padded_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        image_padded_V_ce0 = 1'b1;
    end else begin
        image_padded_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            output_conv_address0 = output_conv_addr_reg_1733;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            output_conv_address0 = zext_ln712_4_fu_1136_p1;
        end else begin
            output_conv_address0 = 'bx;
        end
    end else begin
        output_conv_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output_conv_ce0 = 1'b1;
    end else begin
        output_conv_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln35_1_reg_1534_pp0_iter1_reg == 1'd1))) begin
        output_conv_we0 = 1'b1;
    end else begin
        output_conv_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            weights_address0 = zext_ln1171_9_fu_1000_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights_address0 = zext_ln1171_8_fu_894_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights_address0 = zext_ln1171_6_fu_700_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights_address0 = zext_ln1171_4_fu_670_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_address0 = zext_ln1171_2_fu_554_p1;
        end else begin
            weights_address0 = 'bx;
        end
    end else begin
        weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weights_address1 = zext_ln1171_7_fu_879_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weights_address1 = zext_ln1171_5_fu_685_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weights_address1 = zext_ln1171_3_fu_655_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weights_address1 = zext_ln1171_1_fu_537_p1;
        end else begin
            weights_address1 = 'bx;
        end
    end else begin
        weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        weights_ce0 = 1'b1;
    end else begin
        weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        weights_ce1 = 1'b1;
    end else begin
        weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1171_10_fu_695_p2 = (add_ln1171_9_fu_690_p2 + zext_ln29_reg_1472);

assign add_ln1171_11_fu_869_p2 = (mul_ln1171_reg_1508 + 10'd144);

assign add_ln1171_12_fu_874_p2 = (add_ln1171_11_fu_869_p2 + zext_ln29_reg_1472);

assign add_ln1171_13_fu_884_p2 = (mul_ln1171_reg_1508 + 10'd168);

assign add_ln1171_14_fu_889_p2 = (add_ln1171_13_fu_884_p2 + zext_ln29_reg_1472);

assign add_ln1171_15_fu_899_p2 = (mul_ln1171_reg_1508 + 10'd192);

assign add_ln1171_16_fu_904_p2 = (add_ln1171_15_fu_899_p2 + zext_ln29_reg_1472);

assign add_ln1171_1_fu_542_p2 = (mul_ln1171_fu_525_p2 + 10'd24);

assign add_ln1171_2_fu_548_p2 = (add_ln1171_1_fu_542_p2 + zext_ln29_fu_429_p1);

assign add_ln1171_3_fu_645_p2 = (mul_ln1171_reg_1508 + 10'd48);

assign add_ln1171_4_fu_650_p2 = (add_ln1171_3_fu_645_p2 + zext_ln29_reg_1472);

assign add_ln1171_5_fu_660_p2 = (mul_ln1171_reg_1508 + 10'd72);

assign add_ln1171_6_fu_665_p2 = (add_ln1171_5_fu_660_p2 + zext_ln29_reg_1472);

assign add_ln1171_7_fu_675_p2 = (mul_ln1171_reg_1508 + 10'd96);

assign add_ln1171_8_fu_680_p2 = (add_ln1171_7_fu_675_p2 + zext_ln29_reg_1472);

assign add_ln1171_9_fu_690_p2 = (mul_ln1171_reg_1508 + 10'd120);

assign add_ln1171_fu_531_p2 = (mul_ln1171_fu_525_p2 + zext_ln29_fu_429_p1);

assign add_ln27_1_fu_380_p2 = (indvar_flatten100_fu_152 + 25'd1);

assign add_ln27_fu_401_p2 = (p_fu_148 + 5'd1);

assign add_ln29_1_fu_601_p2 = (indvar_flatten69_fu_144 + 21'd1);

assign add_ln29_fu_463_p2 = (select_ln27_fu_413_p3 + 10'd1);

assign add_ln31_fu_587_p2 = (indvar_flatten46_fu_136 + 12'd1);

assign add_ln35_fu_569_p2 = (select_ln31_fu_513_p3 + 2'd1);

assign add_ln42_1_fu_1004_p2 = (sub_ln42_reg_1593 + 21'd1);

assign add_ln42_2_fu_1022_p2 = (sub_ln42_reg_1593 + 21'd2);

assign add_ln42_3_fu_941_p0 = grp_fu_1315_p2;

assign add_ln42_3_fu_941_p2 = (add_ln42_3_fu_941_p0 + select_ln31_2_cast_fu_848_p1);

assign add_ln42_4_fu_1068_p2 = (sub_ln42_1_reg_1604 + 21'd1);

assign add_ln42_5_fu_1102_p2 = (sub_ln42_1_reg_1604 + 21'd2);

assign add_ln42_6_fu_968_p0 = grp_fu_1315_p2;

assign add_ln42_6_fu_968_p2 = (add_ln42_6_fu_968_p0 + zext_ln31_fu_865_p1);

assign add_ln42_7_fu_1168_p2 = (sub_ln42_2_reg_1611 + 21'd1);

assign add_ln42_8_fu_1203_p2 = (sub_ln42_2_reg_1611 + 21'd2);

assign add_ln42_fu_909_p0 = grp_fu_1315_p2;

assign add_ln42_fu_909_p2 = (add_ln42_fu_909_p0 + zext_ln712_2_fu_785_p1);

assign add_ln712_1_fu_752_p2 = (zext_ln712_fu_737_p1 + zext_ln712_1_fu_748_p1);

assign add_ln712_2_fu_793_p2 = (add_ln712_1_fu_752_p2 + zext_ln712_3_fu_789_p1);

assign add_ln712_3_fu_829_p2 = (sub_ln712_fu_823_p2 + zext_ln29_1_fu_720_p1);

assign and_ln27_1_fu_457_p2 = (xor_ln27_fu_433_p2 & icmp_ln31_fu_451_p2);

assign and_ln27_fu_445_p2 = (xor_ln27_fu_433_p2 & icmp_ln35_fu_439_p2);

assign and_ln29_fu_495_p2 = (or_ln29_1_fu_489_p2 & and_ln27_fu_445_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign empty_11_fu_559_p2 = (zext_ln1171_fu_521_p1 + select_ln29_1_fu_475_p3);

assign empty_fu_714_p2 = (j_fu_132 + 10'd2);

assign grp_fu_1315_p0 = grp_fu_1315_p00;

assign grp_fu_1315_p00 = empty_11_fu_559_p2;

assign grp_fu_1315_p1 = 20'd642;

assign grp_fu_1324_p2 = {{select_ln31_4_fu_1046_p3}, {8'd0}};

assign grp_fu_1333_p2 = {{tmp_s_fu_1078_p4}, {8'd0}};

assign grp_fu_1342_p2 = {{tmp_1_fu_1112_p4}, {8'd0}};

assign grp_fu_1351_p2 = {{tmp_3_fu_1144_p4}, {8'd0}};

assign grp_fu_1360_p2 = {{tmp_4_fu_1178_p4}, {8'd0}};

assign grp_fu_1369_p2 = {{tmp_5_fu_1213_p4}, {8'd0}};

assign grp_fu_1378_p2 = {{tmp_6_fu_1237_p4}, {8'd0}};

assign grp_fu_1387_p2 = {{tmp_7_fu_1261_p4}, {8'd0}};

assign grp_fu_1396_p2 = {{tmp_8_fu_1278_p4}, {8'd0}};

assign icmp_ln27_fu_374_p2 = ((indvar_flatten100_fu_152 == 25'd29491200) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_407_p2 = ((indvar_flatten69_fu_144 == 21'd1228800) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_451_p2 = ((indvar_flatten46_fu_136 == 12'd1920) ? 1'b1 : 1'b0);

assign icmp_ln35_1_fu_575_p2 = ((add_ln35_fu_569_p2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_439_p2 = ((r_fu_128 == 2'd3) ? 1'b1 : 1'b0);

assign indvars_iv_next270_dup_fu_772_p2 = (select_ln29_fu_723_p3 + 10'd1);

assign indvars_iv_next270_fu_708_p2 = (j_fu_132 + 10'd1);

assign indvars_iv_next270_mid1_fu_835_p2 = (select_ln29_fu_723_p3 + 10'd2);

assign mul_ln1171_fu_525_p0 = zext_ln1171_fu_521_p1;

assign mul_ln1171_fu_525_p1 = 10'd216;

assign or_ln29_1_fu_489_p2 = (xor_ln29_fu_483_p2 | icmp_ln29_fu_407_p2);

assign or_ln29_fu_469_p2 = (icmp_ln29_fu_407_p2 | and_ln27_1_fu_457_p2);

assign or_ln31_1_fu_507_p2 = (or_ln31_fu_501_p2 | icmp_ln29_fu_407_p2);

assign or_ln31_fu_501_p2 = (and_ln29_fu_495_p2 | and_ln27_1_fu_457_p2);

assign output_conv_d0 = (output_conv_load_reg_1778 + sum_V_fu_1295_p4);

assign p_mid1_fu_852_p2 = (select_ln29_fu_723_p3 + 10'd3);

assign p_shl10_cast_fu_815_p3 = {{trunc_ln712_1_fu_811_p1}, {3'd0}};

assign p_shl6_cast_fu_981_p3 = {{trunc_ln42_2_fu_977_p1}, {2'd0}};

assign p_shl7_cast_fu_954_p3 = {{trunc_ln42_1_fu_950_p1}, {2'd0}};

assign p_shl8_cast_fu_922_p3 = {{trunc_ln42_fu_918_p1}, {2'd0}};

assign p_shl9_cast_fu_803_p3 = {{trunc_ln712_fu_799_p1}, {5'd0}};

assign select_ln27_1_fu_421_p3 = ((icmp_ln29_fu_407_p2[0:0] == 1'b1) ? add_ln27_fu_401_p2 : p_fu_148);

assign select_ln27_fu_413_p3 = ((icmp_ln29_fu_407_p2[0:0] == 1'b1) ? 10'd0 : i_fu_140);

assign select_ln29_1_fu_475_p3 = ((and_ln27_1_fu_457_p2[0:0] == 1'b1) ? add_ln29_fu_463_p2 : select_ln27_fu_413_p3);

assign select_ln29_2_fu_758_p3 = ((or_ln29_reg_1483[0:0] == 1'b1) ? 10'd1 : indvars_iv_next270_fu_708_p2);

assign select_ln29_3_fu_765_p3 = ((or_ln29_reg_1483[0:0] == 1'b1) ? 10'd2 : empty_fu_714_p2);

assign select_ln29_4_fu_607_p3 = ((icmp_ln29_fu_407_p2[0:0] == 1'b1) ? 21'd1 : add_ln29_1_fu_601_p2);

assign select_ln29_fu_723_p3 = ((or_ln29_reg_1483[0:0] == 1'b1) ? 10'd0 : j_fu_132);

assign select_ln31_1_fu_778_p3 = ((and_ln29_reg_1496[0:0] == 1'b1) ? indvars_iv_next270_dup_fu_772_p2 : select_ln29_fu_723_p3);

assign select_ln31_2_cast_fu_848_p1 = select_ln31_2_fu_841_p3;

assign select_ln31_2_fu_841_p3 = ((and_ln29_reg_1496[0:0] == 1'b1) ? indvars_iv_next270_mid1_fu_835_p2 : select_ln29_2_fu_758_p3);

assign select_ln31_3_fu_858_p3 = ((and_ln29_reg_1496[0:0] == 1'b1) ? p_mid1_fu_852_p2 : select_ln29_3_fu_765_p3);

assign select_ln31_4_fu_1046_p3 = ((or_ln31_1_reg_1503[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_lhs_load);

assign select_ln31_5_fu_593_p3 = ((or_ln29_fu_469_p2[0:0] == 1'b1) ? 12'd1 : add_ln31_fu_587_p2);

assign select_ln31_fu_513_p3 = ((or_ln31_1_fu_507_p2[0:0] == 1'b1) ? 2'd0 : r_fu_128);

assign sub_ln42_1_fu_962_p2 = (p_shl7_cast_fu_954_p3 - zext_ln42_5_fu_946_p1);

assign sub_ln42_2_fu_989_p2 = (p_shl6_cast_fu_981_p3 - zext_ln42_9_fu_973_p1);

assign sub_ln42_fu_930_p2 = (p_shl8_cast_fu_922_p3 - zext_ln42_1_fu_914_p1);

assign sub_ln712_fu_823_p2 = (p_shl9_cast_fu_803_p3 - p_shl10_cast_fu_815_p3);

assign sum_V_fu_1295_p1 = grp_fu_1396_p3;

assign sum_V_fu_1295_p4 = {{sum_V_fu_1295_p1[15:8]}};

assign tmp_1_fu_1112_p1 = grp_fu_1333_p3;

assign tmp_1_fu_1112_p4 = {{tmp_1_fu_1112_p1[15:8]}};

assign tmp_2_fu_741_p3 = {{select_ln29_1_reg_1490}, {7'd0}};

assign tmp_3_fu_1144_p1 = grp_fu_1342_p3;

assign tmp_3_fu_1144_p4 = {{tmp_3_fu_1144_p1[15:8]}};

assign tmp_4_fu_1178_p1 = grp_fu_1351_p3;

assign tmp_4_fu_1178_p4 = {{tmp_4_fu_1178_p1[15:8]}};

assign tmp_5_fu_1213_p1 = grp_fu_1360_p3;

assign tmp_5_fu_1213_p4 = {{tmp_5_fu_1213_p1[15:8]}};

assign tmp_6_fu_1237_p1 = grp_fu_1369_p3;

assign tmp_6_fu_1237_p4 = {{tmp_6_fu_1237_p1[15:8]}};

assign tmp_7_fu_1261_p1 = grp_fu_1378_p3;

assign tmp_7_fu_1261_p4 = {{tmp_7_fu_1261_p1[15:8]}};

assign tmp_8_fu_1278_p1 = grp_fu_1387_p3;

assign tmp_8_fu_1278_p4 = {{tmp_8_fu_1278_p1[15:8]}};

assign tmp_fu_730_p3 = {{select_ln29_1_reg_1490}, {9'd0}};

assign tmp_s_fu_1078_p1 = grp_fu_1324_p3;

assign tmp_s_fu_1078_p4 = {{tmp_s_fu_1078_p1[15:8]}};

assign trunc_ln42_1_fu_950_p1 = add_ln42_3_fu_941_p2[18:0];

assign trunc_ln42_2_fu_977_p1 = add_ln42_6_fu_968_p2[18:0];

assign trunc_ln42_fu_918_p1 = add_ln42_fu_909_p2[18:0];

assign trunc_ln712_1_fu_811_p1 = add_ln712_2_fu_793_p2[20:0];

assign trunc_ln712_fu_799_p1 = add_ln712_2_fu_793_p2[18:0];

assign xor_ln27_fu_433_p2 = (icmp_ln29_fu_407_p2 ^ 1'd1);

assign xor_ln29_fu_483_p2 = (icmp_ln31_fu_451_p2 ^ 1'd1);

assign zext_ln1171_1_fu_537_p1 = add_ln1171_fu_531_p2;

assign zext_ln1171_2_fu_554_p1 = add_ln1171_2_fu_548_p2;

assign zext_ln1171_3_fu_655_p1 = add_ln1171_4_fu_650_p2;

assign zext_ln1171_4_fu_670_p1 = add_ln1171_6_fu_665_p2;

assign zext_ln1171_5_fu_685_p1 = add_ln1171_8_fu_680_p2;

assign zext_ln1171_6_fu_700_p1 = add_ln1171_10_fu_695_p2;

assign zext_ln1171_7_fu_879_p1 = add_ln1171_12_fu_874_p2;

assign zext_ln1171_8_fu_894_p1 = add_ln1171_14_fu_889_p2;

assign zext_ln1171_9_fu_1000_p1 = add_ln1171_16_reg_1588;

assign zext_ln1171_fu_521_p1 = select_ln31_fu_513_p3;

assign zext_ln29_1_fu_720_p1 = select_ln27_1_reg_1467;

assign zext_ln29_fu_429_p1 = select_ln27_1_fu_421_p3;

assign zext_ln31_fu_865_p1 = select_ln31_3_fu_858_p3;

assign zext_ln42_10_fu_1140_p1 = sub_ln42_2_reg_1611;

assign zext_ln42_11_fu_1173_p1 = add_ln42_7_fu_1168_p2;

assign zext_ln42_12_fu_1208_p1 = add_ln42_8_fu_1203_p2;

assign zext_ln42_1_fu_914_p1 = add_ln42_fu_909_p2;

assign zext_ln42_2_fu_936_p1 = sub_ln42_fu_930_p2;

assign zext_ln42_3_fu_1009_p1 = add_ln42_1_fu_1004_p2;

assign zext_ln42_4_fu_1027_p1 = add_ln42_2_fu_1022_p2;

assign zext_ln42_5_fu_946_p1 = add_ln42_3_fu_941_p2;

assign zext_ln42_6_fu_1042_p1 = sub_ln42_1_reg_1604;

assign zext_ln42_7_fu_1073_p1 = add_ln42_4_fu_1068_p2;

assign zext_ln42_8_fu_1107_p1 = add_ln42_5_fu_1102_p2;

assign zext_ln42_9_fu_973_p1 = add_ln42_6_fu_968_p2;

assign zext_ln712_1_fu_748_p1 = tmp_2_fu_741_p3;

assign zext_ln712_2_fu_785_p1 = select_ln31_1_fu_778_p3;

assign zext_ln712_3_fu_789_p1 = select_ln31_1_fu_778_p3;

assign zext_ln712_4_fu_1136_p1 = add_ln712_3_reg_1573;

assign zext_ln712_fu_737_p1 = tmp_fu_730_p3;

always @ (posedge ap_clk) begin
    zext_ln29_reg_1472[9:5] <= 5'b00000;
end

endmodule //conv_ref_conv_ref_Pipeline_conv_ref_label3_VITIS_LOOP_31_4_conv_ref_label2
