// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_test_HH_
#define _conv_test_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "padding_r_test.h"
#include "conv_test_image_pbkb.h"

namespace ap_rtl {

struct conv_test : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<17> > image_r_address0;
    sc_out< sc_logic > image_r_ce0;
    sc_in< sc_lv<32> > image_r_q0;
    sc_out< sc_lv<4> > weights_address0;
    sc_out< sc_logic > weights_ce0;
    sc_in< sc_lv<32> > weights_q0;
    sc_out< sc_lv<17> > output_conv_address0;
    sc_out< sc_logic > output_conv_ce0;
    sc_out< sc_logic > output_conv_we0;
    sc_out< sc_lv<32> > output_conv_d0;
    sc_in< sc_lv<32> > output_conv_q0;


    // Module declarations
    conv_test(sc_module_name name);
    SC_HAS_PROCESS(conv_test);

    ~conv_test();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_test_image_pbkb* image_padded_0_U;
    padding_r_test* grp_padding_r_test_fu_227;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<17> > next_mul_fu_234_p2;
    sc_signal< sc_lv<17> > next_mul_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > indvarinc_fu_240_p2;
    sc_signal< sc_lv<9> > indvarinc_reg_475;
    sc_signal< sc_lv<9> > indvarinc1_fu_246_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > i_3_fu_285_p2;
    sc_signal< sc_lv<9> > i_3_reg_494;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<18> > tmp_9_fu_315_p2;
    sc_signal< sc_lv<18> > tmp_9_reg_499;
    sc_signal< sc_lv<1> > exitcond4_fu_279_p2;
    sc_signal< sc_lv<9> > j_3_fu_327_p2;
    sc_signal< sc_lv<9> > j_3_reg_507;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > r_1_fu_343_p2;
    sc_signal< sc_lv<2> > r_1_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<18> > tmp_12_fu_359_p2;
    sc_signal< sc_lv<18> > tmp_12_reg_520;
    sc_signal< sc_lv<1> > exitcond2_fu_337_p2;
    sc_signal< sc_lv<5> > tmp_15_fu_381_p2;
    sc_signal< sc_lv<5> > tmp_15_reg_525;
    sc_signal< sc_lv<17> > output_conv_addr_reg_530;
    sc_signal< sc_lv<2> > s_1_fu_411_p2;
    sc_signal< sc_lv<2> > s_1_reg_538;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > exitcond1_fu_405_p2;
    sc_signal< sc_lv<32> > sum_3_fu_457_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<17> > image_padded_0_address0;
    sc_signal< sc_logic > image_padded_0_ce0;
    sc_signal< sc_logic > image_padded_0_we0;
    sc_signal< sc_lv<32> > image_padded_0_d0;
    sc_signal< sc_lv<32> > image_padded_0_q0;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_ap_start;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_ap_done;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_ap_idle;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_ap_ready;
    sc_signal< sc_lv<17> > grp_padding_r_test_fu_227_im_address0;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_im_ce0;
    sc_signal< sc_lv<17> > grp_padding_r_test_fu_227_image_padded_0_address0;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_image_padded_0_ce0;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_image_padded_0_we0;
    sc_signal< sc_lv<32> > grp_padding_r_test_fu_227_image_padded_0_d0;
    sc_signal< sc_lv<9> > invdar_reg_122;
    sc_signal< sc_lv<1> > tmp_5_fu_267_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_273_p2;
    sc_signal< sc_lv<17> > phi_mul_reg_134;
    sc_signal< sc_lv<9> > invdar9_reg_146;
    sc_signal< sc_lv<9> > i_reg_157;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond3_fu_321_p2;
    sc_signal< sc_lv<9> > j_reg_169;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > sum_reg_181;
    sc_signal< sc_lv<2> > r_reg_193;
    sc_signal< sc_lv<32> > sum_1_reg_204;
    sc_signal< sc_lv<2> > s_reg_216;
    sc_signal< sc_logic > grp_padding_r_test_fu_227_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_16_cast_fu_262_p1;
    sc_signal< sc_lv<64> > tmp_20_cast_fu_396_p1;
    sc_signal< sc_lv<64> > tmp_24_cast_fu_432_p1;
    sc_signal< sc_lv<64> > tmp_25_cast_fu_446_p1;
    sc_signal< sc_lv<17> > tmp_cast_fu_252_p1;
    sc_signal< sc_lv<17> > tmp_s_fu_256_p2;
    sc_signal< sc_lv<17> > tmp_7_fu_291_p3;
    sc_signal< sc_lv<15> > tmp_8_fu_303_p3;
    sc_signal< sc_lv<18> > p_shl1_cast_fu_311_p1;
    sc_signal< sc_lv<18> > p_shl_cast_fu_299_p1;
    sc_signal< sc_lv<9> > r_cast4_fu_333_p1;
    sc_signal< sc_lv<9> > tmp_4_fu_349_p2;
    sc_signal< sc_lv<9> > tmp_12_fu_359_p0;
    sc_signal< sc_lv<4> > tmp_14_fu_369_p3;
    sc_signal< sc_lv<5> > p_shl2_cast_fu_377_p1;
    sc_signal< sc_lv<5> > tmp_8_cast_fu_365_p1;
    sc_signal< sc_lv<18> > tmp_9_cast_fu_387_p1;
    sc_signal< sc_lv<18> > tmp_11_fu_391_p2;
    sc_signal< sc_lv<9> > s_cast2_fu_401_p1;
    sc_signal< sc_lv<9> > tmp_10_fu_417_p2;
    sc_signal< sc_lv<18> > tmp_11_cast_fu_423_p1;
    sc_signal< sc_lv<18> > tmp_16_fu_427_p2;
    sc_signal< sc_lv<5> > tmp_12_cast_fu_437_p1;
    sc_signal< sc_lv<5> > tmp_17_fu_441_p2;
    sc_signal< sc_lv<32> > tmp_13_fu_451_p0;
    sc_signal< sc_lv<32> > tmp_13_fu_451_p1;
    sc_signal< sc_lv<32> > tmp_13_fu_451_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_lv<18> > tmp_12_fu_359_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<17> ap_const_lv17_142;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_141;
    static const sc_lv<9> ap_const_lv9_140;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<18> ap_const_lv18_142;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_405_p2();
    void thread_exitcond2_fu_337_p2();
    void thread_exitcond3_fu_321_p2();
    void thread_exitcond4_fu_279_p2();
    void thread_grp_padding_r_test_fu_227_ap_start();
    void thread_i_3_fu_285_p2();
    void thread_image_padded_0_address0();
    void thread_image_padded_0_ce0();
    void thread_image_padded_0_d0();
    void thread_image_padded_0_we0();
    void thread_image_r_address0();
    void thread_image_r_ce0();
    void thread_indvarinc1_fu_246_p2();
    void thread_indvarinc_fu_240_p2();
    void thread_j_3_fu_327_p2();
    void thread_next_mul_fu_234_p2();
    void thread_output_conv_address0();
    void thread_output_conv_ce0();
    void thread_output_conv_d0();
    void thread_output_conv_we0();
    void thread_p_shl1_cast_fu_311_p1();
    void thread_p_shl2_cast_fu_377_p1();
    void thread_p_shl_cast_fu_299_p1();
    void thread_r_1_fu_343_p2();
    void thread_r_cast4_fu_333_p1();
    void thread_s_1_fu_411_p2();
    void thread_s_cast2_fu_401_p1();
    void thread_sum_3_fu_457_p2();
    void thread_tmp_10_fu_417_p2();
    void thread_tmp_11_cast_fu_423_p1();
    void thread_tmp_11_fu_391_p2();
    void thread_tmp_12_cast_fu_437_p1();
    void thread_tmp_12_fu_359_p0();
    void thread_tmp_12_fu_359_p00();
    void thread_tmp_12_fu_359_p2();
    void thread_tmp_13_fu_451_p0();
    void thread_tmp_13_fu_451_p1();
    void thread_tmp_13_fu_451_p2();
    void thread_tmp_14_fu_369_p3();
    void thread_tmp_15_fu_381_p2();
    void thread_tmp_16_cast_fu_262_p1();
    void thread_tmp_16_fu_427_p2();
    void thread_tmp_17_fu_441_p2();
    void thread_tmp_20_cast_fu_396_p1();
    void thread_tmp_24_cast_fu_432_p1();
    void thread_tmp_25_cast_fu_446_p1();
    void thread_tmp_4_fu_349_p2();
    void thread_tmp_5_fu_267_p2();
    void thread_tmp_6_fu_273_p2();
    void thread_tmp_7_fu_291_p3();
    void thread_tmp_8_cast_fu_365_p1();
    void thread_tmp_8_fu_303_p3();
    void thread_tmp_9_cast_fu_387_p1();
    void thread_tmp_9_fu_315_p2();
    void thread_tmp_cast_fu_252_p1();
    void thread_tmp_s_fu_256_p2();
    void thread_weights_address0();
    void thread_weights_ce0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
