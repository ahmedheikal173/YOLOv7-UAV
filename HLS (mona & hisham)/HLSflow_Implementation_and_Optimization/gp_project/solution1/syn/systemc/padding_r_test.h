// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _padding_r_test_HH_
#define _padding_r_test_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct padding_r_test : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<17> > im_address0;
    sc_out< sc_logic > im_ce0;
    sc_in< sc_lv<32> > im_q0;
    sc_out< sc_lv<17> > image_padded_0_address0;
    sc_out< sc_logic > image_padded_0_ce0;
    sc_out< sc_logic > image_padded_0_we0;
    sc_out< sc_lv<32> > image_padded_0_d0;


    // Module declarations
    padding_r_test(sc_module_name name);
    SC_HAS_PROCESS(padding_r_test);

    ~padding_r_test();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<17> > next_mul_fu_140_p2;
    sc_signal< sc_lv<17> > next_mul_reg_276;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > i_2_fu_152_p2;
    sc_signal< sc_lv<9> > i_2_reg_284;
    sc_signal< sc_lv<9> > j_1_fu_164_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > i_1_fu_191_p2;
    sc_signal< sc_lv<9> > i_1_reg_300;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<18> > tmp_8_fu_221_p2;
    sc_signal< sc_lv<18> > tmp_8_reg_305;
    sc_signal< sc_lv<1> > exitcond1_fu_185_p2;
    sc_signal< sc_lv<17> > tmp_s_fu_231_p2;
    sc_signal< sc_lv<17> > tmp_s_reg_310;
    sc_signal< sc_lv<9> > j_2_fu_243_p2;
    sc_signal< sc_lv<9> > j_2_reg_318;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_237_p2;
    sc_signal< sc_lv<17> > tmp_4_fu_267_p2;
    sc_signal< sc_lv<17> > tmp_4_reg_328;
    sc_signal< sc_lv<9> > i_reg_84;
    sc_signal< sc_lv<1> > exitcond3_fu_158_p2;
    sc_signal< sc_lv<17> > phi_mul_reg_95;
    sc_signal< sc_lv<9> > j_reg_107;
    sc_signal< sc_lv<1> > exitcond4_fu_146_p2;
    sc_signal< sc_lv<9> > i2_reg_118;
    sc_signal< sc_lv<9> > j3_reg_129;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_11_cast_fu_180_p1;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_258_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_272_p1;
    sc_signal< sc_lv<17> > tmp_9_cast_fu_170_p1;
    sc_signal< sc_lv<17> > tmp_2_fu_174_p2;
    sc_signal< sc_lv<17> > tmp_5_fu_197_p3;
    sc_signal< sc_lv<15> > tmp_6_fu_209_p3;
    sc_signal< sc_lv<18> > p_shl1_cast_fu_217_p1;
    sc_signal< sc_lv<18> > p_shl_cast_fu_205_p1;
    sc_signal< sc_lv<9> > tmp_s_fu_231_p0;
    sc_signal< sc_lv<18> > tmp_cast_fu_249_p1;
    sc_signal< sc_lv<18> > tmp_3_fu_253_p2;
    sc_signal< sc_lv<17> > tmp_2_cast_fu_263_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<17> > tmp_s_fu_231_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<17> ap_const_lv17_142;
    static const sc_lv<9> ap_const_lv9_142;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_140;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_185_p2();
    void thread_exitcond3_fu_158_p2();
    void thread_exitcond4_fu_146_p2();
    void thread_exitcond_fu_237_p2();
    void thread_i_1_fu_191_p2();
    void thread_i_2_fu_152_p2();
    void thread_im_address0();
    void thread_im_ce0();
    void thread_image_padded_0_address0();
    void thread_image_padded_0_ce0();
    void thread_image_padded_0_d0();
    void thread_image_padded_0_we0();
    void thread_j_1_fu_164_p2();
    void thread_j_2_fu_243_p2();
    void thread_next_mul_fu_140_p2();
    void thread_p_shl1_cast_fu_217_p1();
    void thread_p_shl_cast_fu_205_p1();
    void thread_tmp_11_cast_fu_180_p1();
    void thread_tmp_12_cast_fu_258_p1();
    void thread_tmp_13_cast_fu_272_p1();
    void thread_tmp_2_cast_fu_263_p1();
    void thread_tmp_2_fu_174_p2();
    void thread_tmp_3_fu_253_p2();
    void thread_tmp_4_fu_267_p2();
    void thread_tmp_5_fu_197_p3();
    void thread_tmp_6_fu_209_p3();
    void thread_tmp_8_fu_221_p2();
    void thread_tmp_9_cast_fu_170_p1();
    void thread_tmp_cast_fu_249_p1();
    void thread_tmp_s_fu_231_p0();
    void thread_tmp_s_fu_231_p00();
    void thread_tmp_s_fu_231_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
