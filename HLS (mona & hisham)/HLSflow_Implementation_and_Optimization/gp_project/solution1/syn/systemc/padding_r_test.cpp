// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "padding_r_test.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic padding_r_test::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic padding_r_test::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> padding_r_test::ap_ST_fsm_state1 = "1";
const sc_lv<6> padding_r_test::ap_ST_fsm_state2 = "10";
const sc_lv<6> padding_r_test::ap_ST_fsm_state3 = "100";
const sc_lv<6> padding_r_test::ap_ST_fsm_state4 = "1000";
const sc_lv<6> padding_r_test::ap_ST_fsm_state5 = "10000";
const sc_lv<6> padding_r_test::ap_ST_fsm_state6 = "100000";
const sc_lv<32> padding_r_test::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> padding_r_test::ap_const_lv32_1 = "1";
const sc_lv<32> padding_r_test::ap_const_lv32_2 = "10";
const sc_lv<32> padding_r_test::ap_const_lv32_3 = "11";
const sc_lv<1> padding_r_test::ap_const_lv1_0 = "0";
const sc_lv<32> padding_r_test::ap_const_lv32_4 = "100";
const sc_lv<9> padding_r_test::ap_const_lv9_0 = "000000000";
const sc_lv<1> padding_r_test::ap_const_lv1_1 = "1";
const sc_lv<17> padding_r_test::ap_const_lv17_0 = "00000000000000000";
const sc_lv<32> padding_r_test::ap_const_lv32_5 = "101";
const sc_lv<17> padding_r_test::ap_const_lv17_142 = "101000010";
const sc_lv<9> padding_r_test::ap_const_lv9_142 = "101000010";
const sc_lv<9> padding_r_test::ap_const_lv9_1 = "1";
const sc_lv<9> padding_r_test::ap_const_lv9_140 = "101000000";
const sc_lv<8> padding_r_test::ap_const_lv8_0 = "00000000";
const sc_lv<6> padding_r_test::ap_const_lv6_0 = "000000";
const bool padding_r_test::ap_const_boolean_1 = true;

padding_r_test::padding_r_test(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_185_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_185_p2 );

    SC_METHOD(thread_exitcond1_fu_185_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i2_reg_118 );

    SC_METHOD(thread_exitcond3_fu_158_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_107 );

    SC_METHOD(thread_exitcond4_fu_146_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_84 );

    SC_METHOD(thread_exitcond_fu_237_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j3_reg_129 );

    SC_METHOD(thread_i_1_fu_191_p2);
    sensitive << ( i2_reg_118 );

    SC_METHOD(thread_i_2_fu_152_p2);
    sensitive << ( i_reg_84 );

    SC_METHOD(thread_im_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_12_cast_fu_258_p1 );

    SC_METHOD(thread_im_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_image_padded_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_11_cast_fu_180_p1 );
    sensitive << ( tmp_13_cast_fu_272_p1 );

    SC_METHOD(thread_image_padded_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_image_padded_0_d0);
    sensitive << ( im_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_image_padded_0_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_158_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j_1_fu_164_p2);
    sensitive << ( j_reg_107 );

    SC_METHOD(thread_j_2_fu_243_p2);
    sensitive << ( j3_reg_129 );

    SC_METHOD(thread_next_mul_fu_140_p2);
    sensitive << ( phi_mul_reg_95 );

    SC_METHOD(thread_p_shl1_cast_fu_217_p1);
    sensitive << ( tmp_6_fu_209_p3 );

    SC_METHOD(thread_p_shl_cast_fu_205_p1);
    sensitive << ( tmp_5_fu_197_p3 );

    SC_METHOD(thread_tmp_11_cast_fu_180_p1);
    sensitive << ( tmp_2_fu_174_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_258_p1);
    sensitive << ( tmp_3_fu_253_p2 );

    SC_METHOD(thread_tmp_13_cast_fu_272_p1);
    sensitive << ( tmp_4_reg_328 );

    SC_METHOD(thread_tmp_2_cast_fu_263_p1);
    sensitive << ( j_2_fu_243_p2 );

    SC_METHOD(thread_tmp_2_fu_174_p2);
    sensitive << ( phi_mul_reg_95 );
    sensitive << ( tmp_9_cast_fu_170_p1 );

    SC_METHOD(thread_tmp_3_fu_253_p2);
    sensitive << ( tmp_8_reg_305 );
    sensitive << ( tmp_cast_fu_249_p1 );

    SC_METHOD(thread_tmp_4_fu_267_p2);
    sensitive << ( tmp_s_reg_310 );
    sensitive << ( tmp_2_cast_fu_263_p1 );

    SC_METHOD(thread_tmp_5_fu_197_p3);
    sensitive << ( i2_reg_118 );

    SC_METHOD(thread_tmp_6_fu_209_p3);
    sensitive << ( i2_reg_118 );

    SC_METHOD(thread_tmp_8_fu_221_p2);
    sensitive << ( p_shl1_cast_fu_217_p1 );
    sensitive << ( p_shl_cast_fu_205_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_170_p1);
    sensitive << ( j_reg_107 );

    SC_METHOD(thread_tmp_cast_fu_249_p1);
    sensitive << ( j3_reg_129 );

    SC_METHOD(thread_tmp_s_fu_231_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_s_fu_231_p00 );

    SC_METHOD(thread_tmp_s_fu_231_p00);
    sensitive << ( i_1_fu_191_p2 );

    SC_METHOD(thread_tmp_s_fu_231_p2);
    sensitive << ( tmp_s_fu_231_p0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_185_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_237_p2 );
    sensitive << ( exitcond3_fu_158_p2 );
    sensitive << ( exitcond4_fu_146_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "padding_r_test_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, im_address0, "(port)im_address0");
    sc_trace(mVcdFile, im_ce0, "(port)im_ce0");
    sc_trace(mVcdFile, im_q0, "(port)im_q0");
    sc_trace(mVcdFile, image_padded_0_address0, "(port)image_padded_0_address0");
    sc_trace(mVcdFile, image_padded_0_ce0, "(port)image_padded_0_ce0");
    sc_trace(mVcdFile, image_padded_0_we0, "(port)image_padded_0_we0");
    sc_trace(mVcdFile, image_padded_0_d0, "(port)image_padded_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, next_mul_fu_140_p2, "next_mul_fu_140_p2");
    sc_trace(mVcdFile, next_mul_reg_276, "next_mul_reg_276");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_2_fu_152_p2, "i_2_fu_152_p2");
    sc_trace(mVcdFile, i_2_reg_284, "i_2_reg_284");
    sc_trace(mVcdFile, j_1_fu_164_p2, "j_1_fu_164_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_191_p2, "i_1_fu_191_p2");
    sc_trace(mVcdFile, i_1_reg_300, "i_1_reg_300");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_fu_221_p2, "tmp_8_fu_221_p2");
    sc_trace(mVcdFile, tmp_8_reg_305, "tmp_8_reg_305");
    sc_trace(mVcdFile, exitcond1_fu_185_p2, "exitcond1_fu_185_p2");
    sc_trace(mVcdFile, tmp_s_fu_231_p2, "tmp_s_fu_231_p2");
    sc_trace(mVcdFile, tmp_s_reg_310, "tmp_s_reg_310");
    sc_trace(mVcdFile, j_2_fu_243_p2, "j_2_fu_243_p2");
    sc_trace(mVcdFile, j_2_reg_318, "j_2_reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_237_p2, "exitcond_fu_237_p2");
    sc_trace(mVcdFile, tmp_4_fu_267_p2, "tmp_4_fu_267_p2");
    sc_trace(mVcdFile, tmp_4_reg_328, "tmp_4_reg_328");
    sc_trace(mVcdFile, i_reg_84, "i_reg_84");
    sc_trace(mVcdFile, exitcond3_fu_158_p2, "exitcond3_fu_158_p2");
    sc_trace(mVcdFile, phi_mul_reg_95, "phi_mul_reg_95");
    sc_trace(mVcdFile, j_reg_107, "j_reg_107");
    sc_trace(mVcdFile, exitcond4_fu_146_p2, "exitcond4_fu_146_p2");
    sc_trace(mVcdFile, i2_reg_118, "i2_reg_118");
    sc_trace(mVcdFile, j3_reg_129, "j3_reg_129");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_11_cast_fu_180_p1, "tmp_11_cast_fu_180_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_258_p1, "tmp_12_cast_fu_258_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_272_p1, "tmp_13_cast_fu_272_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_170_p1, "tmp_9_cast_fu_170_p1");
    sc_trace(mVcdFile, tmp_2_fu_174_p2, "tmp_2_fu_174_p2");
    sc_trace(mVcdFile, tmp_5_fu_197_p3, "tmp_5_fu_197_p3");
    sc_trace(mVcdFile, tmp_6_fu_209_p3, "tmp_6_fu_209_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_217_p1, "p_shl1_cast_fu_217_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_205_p1, "p_shl_cast_fu_205_p1");
    sc_trace(mVcdFile, tmp_s_fu_231_p0, "tmp_s_fu_231_p0");
    sc_trace(mVcdFile, tmp_cast_fu_249_p1, "tmp_cast_fu_249_p1");
    sc_trace(mVcdFile, tmp_3_fu_253_p2, "tmp_3_fu_253_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_263_p1, "tmp_2_cast_fu_263_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_s_fu_231_p00, "tmp_s_fu_231_p00");
#endif

    }
}

padding_r_test::~padding_r_test() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void padding_r_test::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_237_p2.read(), ap_const_lv1_1))) {
        i2_reg_118 = i_1_reg_300.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_146_p2.read()))) {
        i2_reg_118 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_158_p2.read(), ap_const_lv1_1))) {
        i_reg_84 = i_2_reg_284.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_84 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_185_p2.read(), ap_const_lv1_0))) {
        j3_reg_129 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j3_reg_129 = j_2_reg_318.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_146_p2.read()))) {
        j_reg_107 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_158_p2.read()))) {
        j_reg_107 = j_1_fu_164_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_158_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_95 = next_mul_reg_276.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_95 = ap_const_lv17_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_reg_300 = i_1_fu_191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_2_reg_284 = i_2_fu_152_p2.read();
        next_mul_reg_276 = next_mul_fu_140_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_2_reg_318 = j_2_fu_243_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_237_p2.read()))) {
        tmp_4_reg_328 = tmp_4_fu_267_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_185_p2.read(), ap_const_lv1_0))) {
        tmp_8_reg_305 = tmp_8_fu_221_p2.read();
        tmp_s_reg_310 = tmp_s_fu_231_p2.read();
    }
}

void padding_r_test::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void padding_r_test::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void padding_r_test::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void padding_r_test::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void padding_r_test::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void padding_r_test::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void padding_r_test::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_185_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void padding_r_test::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void padding_r_test::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_185_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void padding_r_test::thread_exitcond1_fu_185_p2() {
    exitcond1_fu_185_p2 = (!i2_reg_118.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<1>(): sc_lv<1>(i2_reg_118.read() == ap_const_lv9_140);
}

void padding_r_test::thread_exitcond3_fu_158_p2() {
    exitcond3_fu_158_p2 = (!j_reg_107.read().is_01() || !ap_const_lv9_142.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_107.read() == ap_const_lv9_142);
}

void padding_r_test::thread_exitcond4_fu_146_p2() {
    exitcond4_fu_146_p2 = (!i_reg_84.read().is_01() || !ap_const_lv9_142.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_84.read() == ap_const_lv9_142);
}

void padding_r_test::thread_exitcond_fu_237_p2() {
    exitcond_fu_237_p2 = (!j3_reg_129.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<1>(): sc_lv<1>(j3_reg_129.read() == ap_const_lv9_140);
}

void padding_r_test::thread_i_1_fu_191_p2() {
    i_1_fu_191_p2 = (!i2_reg_118.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i2_reg_118.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void padding_r_test::thread_i_2_fu_152_p2() {
    i_2_fu_152_p2 = (!i_reg_84.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_84.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void padding_r_test::thread_im_address0() {
    im_address0 =  (sc_lv<17>) (tmp_12_cast_fu_258_p1.read());
}

void padding_r_test::thread_im_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        im_ce0 = ap_const_logic_1;
    } else {
        im_ce0 = ap_const_logic_0;
    }
}

void padding_r_test::thread_image_padded_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        image_padded_0_address0 =  (sc_lv<17>) (tmp_13_cast_fu_272_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        image_padded_0_address0 =  (sc_lv<17>) (tmp_11_cast_fu_180_p1.read());
    } else {
        image_padded_0_address0 = "XXXXXXXXXXXXXXXXX";
    }
}

void padding_r_test::thread_image_padded_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        image_padded_0_ce0 = ap_const_logic_1;
    } else {
        image_padded_0_ce0 = ap_const_logic_0;
    }
}

void padding_r_test::thread_image_padded_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        image_padded_0_d0 = im_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        image_padded_0_d0 = ap_const_lv32_0;
    } else {
        image_padded_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void padding_r_test::thread_image_padded_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_158_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        image_padded_0_we0 = ap_const_logic_1;
    } else {
        image_padded_0_we0 = ap_const_logic_0;
    }
}

void padding_r_test::thread_j_1_fu_164_p2() {
    j_1_fu_164_p2 = (!j_reg_107.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_107.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void padding_r_test::thread_j_2_fu_243_p2() {
    j_2_fu_243_p2 = (!j3_reg_129.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j3_reg_129.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void padding_r_test::thread_next_mul_fu_140_p2() {
    next_mul_fu_140_p2 = (!phi_mul_reg_95.read().is_01() || !ap_const_lv17_142.is_01())? sc_lv<17>(): (sc_biguint<17>(phi_mul_reg_95.read()) + sc_biguint<17>(ap_const_lv17_142));
}

void padding_r_test::thread_p_shl1_cast_fu_217_p1() {
    p_shl1_cast_fu_217_p1 = esl_zext<18,15>(tmp_6_fu_209_p3.read());
}

void padding_r_test::thread_p_shl_cast_fu_205_p1() {
    p_shl_cast_fu_205_p1 = esl_zext<18,17>(tmp_5_fu_197_p3.read());
}

void padding_r_test::thread_tmp_11_cast_fu_180_p1() {
    tmp_11_cast_fu_180_p1 = esl_zext<64,17>(tmp_2_fu_174_p2.read());
}

void padding_r_test::thread_tmp_12_cast_fu_258_p1() {
    tmp_12_cast_fu_258_p1 = esl_zext<64,18>(tmp_3_fu_253_p2.read());
}

void padding_r_test::thread_tmp_13_cast_fu_272_p1() {
    tmp_13_cast_fu_272_p1 = esl_zext<64,17>(tmp_4_reg_328.read());
}

void padding_r_test::thread_tmp_2_cast_fu_263_p1() {
    tmp_2_cast_fu_263_p1 = esl_zext<17,9>(j_2_fu_243_p2.read());
}

void padding_r_test::thread_tmp_2_fu_174_p2() {
    tmp_2_fu_174_p2 = (!phi_mul_reg_95.read().is_01() || !tmp_9_cast_fu_170_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(phi_mul_reg_95.read()) + sc_biguint<17>(tmp_9_cast_fu_170_p1.read()));
}

void padding_r_test::thread_tmp_3_fu_253_p2() {
    tmp_3_fu_253_p2 = (!tmp_8_reg_305.read().is_01() || !tmp_cast_fu_249_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_8_reg_305.read()) + sc_biguint<18>(tmp_cast_fu_249_p1.read()));
}

void padding_r_test::thread_tmp_4_fu_267_p2() {
    tmp_4_fu_267_p2 = (!tmp_s_reg_310.read().is_01() || !tmp_2_cast_fu_263_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_s_reg_310.read()) + sc_biguint<17>(tmp_2_cast_fu_263_p1.read()));
}

void padding_r_test::thread_tmp_5_fu_197_p3() {
    tmp_5_fu_197_p3 = esl_concat<9,8>(i2_reg_118.read(), ap_const_lv8_0);
}

void padding_r_test::thread_tmp_6_fu_209_p3() {
    tmp_6_fu_209_p3 = esl_concat<9,6>(i2_reg_118.read(), ap_const_lv6_0);
}

void padding_r_test::thread_tmp_8_fu_221_p2() {
    tmp_8_fu_221_p2 = (!p_shl1_cast_fu_217_p1.read().is_01() || !p_shl_cast_fu_205_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(p_shl1_cast_fu_217_p1.read()) + sc_biguint<18>(p_shl_cast_fu_205_p1.read()));
}

void padding_r_test::thread_tmp_9_cast_fu_170_p1() {
    tmp_9_cast_fu_170_p1 = esl_zext<17,9>(j_reg_107.read());
}

void padding_r_test::thread_tmp_cast_fu_249_p1() {
    tmp_cast_fu_249_p1 = esl_zext<18,9>(j3_reg_129.read());
}

void padding_r_test::thread_tmp_s_fu_231_p0() {
    tmp_s_fu_231_p0 =  (sc_lv<9>) (tmp_s_fu_231_p00.read());
}

void padding_r_test::thread_tmp_s_fu_231_p00() {
    tmp_s_fu_231_p00 = esl_zext<17,9>(i_1_fu_191_p2.read());
}

void padding_r_test::thread_tmp_s_fu_231_p2() {
    tmp_s_fu_231_p2 = (!tmp_s_fu_231_p0.read().is_01() || !ap_const_lv17_142.is_01())? sc_lv<17>(): sc_biguint<9>(tmp_s_fu_231_p0.read()) * sc_biguint<17>(ap_const_lv17_142);
}

void padding_r_test::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_146_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_158_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_185_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_237_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

