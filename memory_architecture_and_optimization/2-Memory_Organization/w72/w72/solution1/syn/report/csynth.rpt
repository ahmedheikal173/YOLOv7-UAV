

================================================================
== Synthesis Summary Report of 'interleave_manual_rnd'
================================================================
+ General Information: 
    * Date:           Sat Jun  1 16:44:06 2024
    * Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
    * Project:        w72
    * Solution:       solution1 (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcvu11p-flga2577-1-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-----------------------------------------+--------+-------+---------+---------+----------+---------+------+----------+---------+----+-----------+------------+-----+
    |                 Modules                 |  Issue |       | Latency | Latency | Iteration|         | Trip |          |         |    |           |            |     |
    |                 & Loops                 |  Type  | Slack | (cycles)|   (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF    |     LUT    | URAM|
    +-----------------------------------------+--------+-------+---------+---------+----------+---------+------+----------+---------+----+-----------+------------+-----+
    |+ interleave_manual_rnd                  |  Timing|  -0.00|       84|  840.000|         -|       85|     -|        no|  5 (~0%)|   -|  953 (~0%)|  2500 (~0%)|    -|
    | + interleave_manual_rnd_Pipeline_WRITE  |  Timing|  -0.00|        6|   60.000|         -|        6|     -|        no|        -|   -|   17 (~0%)|   131 (~0%)|    -|
    |  o WRITE                                |       -|   7.30|        4|   40.000|         3|        1|     3|       yes|        -|   -|          -|           -|    -|
    | + interleave_manual_rnd_Pipeline_LOAD   |  Timing|  -0.00|       12|  120.000|         -|       12|     -|        no|        -|   -|   47 (~0%)|   176 (~0%)|    -|
    |  o LOAD                                 |       -|   7.30|       10|  100.000|         3|        1|     9|       yes|        -|   -|          -|           -|    -|
    +-----------------------------------------+--------+-------+---------+---------+----------+---------+------+----------+---------+----+-----------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem | 8 -> 8     | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          | BRAM=2            |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                             |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                               |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN 5=CHAN2_INT_EN                           |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST 5=CHAN2_INT_ST                           |
| s_axi_control | x_in_1   | 0x10   | 32    | W      | Data signal of x_in              |                                                                        |
| s_axi_control | x_in_2   | 0x14   | 32    | W      | Data signal of x_in              |                                                                        |
| s_axi_control | y_1      | 0x1c   | 32    | W      | Data signal of y                 |                                                                        |
| s_axi_control | y_2      | 0x20   | 32    | W      | Data signal of y                 |                                                                        |
| s_axi_control | load     | 0x28   | 32    | W      | Data signal of load              |                                                                        |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+------------+
| Argument | Direction | Datatype   |
+----------+-----------+------------+
| x_in     | inout     | ap_int<8>* |
| y        | inout     | ap_int<8>* |
| load     | in        | bool       |
+----------+-----------+------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+----------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                          |
+----------+---------------+-----------+----------+----------------------------------+
| x_in     | m_axi_gmem    | interface |          |                                  |
| x_in     | s_axi_control | register  | offset   | name=x_in_1 offset=0x10 range=32 |
| x_in     | s_axi_control | register  | offset   | name=x_in_2 offset=0x14 range=32 |
| y        | m_axi_gmem    | interface |          |                                  |
| y        | s_axi_control | register  | offset   | name=y_1 offset=0x1c range=32    |
| y        | s_axi_control | register  | offset   | name=y_2 offset=0x20 range=32    |
| load     | s_axi_control | register  |          | name=load offset=0x28 range=32   |
+----------+---------------+-----------+----------+----------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-------+-----------+--------+-------+---------------------------------------+
| HW Interface | Loop  | Direction | Length | Width | Location                              |
+--------------+-------+-----------+--------+-------+---------------------------------------+
| m_axi_gmem   | LOAD  | read      | 9      | 8     | ../src/interleave_manual_rnd.cpp:14:5 |
| m_axi_gmem   | WRITE | write     | 3      | 8     | ../src/interleave_manual_rnd.cpp:19:5 |
+--------------+-------+-----------+--------+-------+---------------------------------------+

* Inferred Bursts and Widening Missed
+--------------+----------+-------+------------------------------------------------+------------+---------------------------------------+
| HW Interface | Variable | Loop  | Problem                                        | Resolution | Location                              |
+--------------+----------+-------+------------------------------------------------+------------+---------------------------------------+
| m_axi_gmem   | x_in     | LOAD  | Sequential access length is not divisible by 2 | 214-234    | ../src/interleave_manual_rnd.cpp:14:5 |
| m_axi_gmem   | 1        | WRITE | Sequential access length is not divisible by 2 | 214-234    | ../src/interleave_manual_rnd.cpp:19:5 |
+--------------+----------+-------+------------------------------------------------+------------+---------------------------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+-----------------------------------------+-----+--------+-----------------+-----+--------+---------+
| Name                                    | DSP | Pragma | Variable        | Op  | Impl   | Latency |
+-----------------------------------------+-----+--------+-----------------+-----+--------+---------+
| + interleave_manual_rnd                 | 0   |        |                 |     |        |         |
|  + interleave_manual_rnd_Pipeline_WRITE | 0   |        |                 |     |        |         |
|    indvars_iv_next_fu_151_p2            | -   |        | indvars_iv_next | add | fabric | 0       |
|    add_ln70_fu_180_p2                   | -   |        | add_ln70        | add | tadder | 0       |
|    add_ln70_1_fu_186_p2                 | -   |        | add_ln70_1      | add | tadder | 0       |
|    add_ln21_fu_164_p2                   | -   |        | add_ln21        | add | fabric | 0       |
|  + interleave_manual_rnd_Pipeline_LOAD  | 0   |        |                 |     |        |         |
|    i_fu_186_p2                          | -   |        | i               | add | fabric | 0       |
|    add_ln10_fu_241_p2                   | -   |        | add_ln10        | add | fabric | 0       |
|    add_ln10_1_fu_247_p2                 | -   |        | add_ln10_1      | add | fabric | 0       |
|    add_ln10_2_fu_253_p2                 | -   |        | add_ln10_2      | add | fabric | 0       |
|    add_ln14_1_fu_207_p2                 | -   |        | add_ln14_1      | add | fabric | 0       |
+-----------------------------------------+-----+--------+-----------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
+-------------------------+------+------+--------+----------+---------+------+---------+
| Name                    | BRAM | URAM | Pragma | Variable | Storage | Impl | Latency |
+-------------------------+------+------+--------+----------+---------+------+---------+
| + interleave_manual_rnd | 5    | 0    |        |          |         |      |         |
|   x_x0_V_U              | 1    | -    | pragma | x_x0_V   | ram_1p  | bram | 1       |
|   x_x1_V_U              | 1    | -    | pragma | x_x1_V   | ram_1p  | bram | 1       |
|   x_x2_V_U              | 1    | -    | pragma | x_x2_V   | ram_1p  | bram | 1       |
+-------------------------+------+------+--------+----------+---------+------+---------+


================================================================
== User Pragma Report
================================================================
* Pragmas with Warnings
+----------+----------------------------------+--------------------------------------------------------------------+------------------------------------------------------------------------------+
| Type     | Options                          | Location                                                           | Messages                                                                     |
+----------+----------------------------------+--------------------------------------------------------------------+------------------------------------------------------------------------------+
| resource | variable=x0 core=RAM_1P_BRAM     | ../src/./interleave_mem_rnd.hpp:17 in interleave_mem_rnd<t, n>, x0 | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=x1 core=RAM_1P_BRAM     | ../src/./interleave_mem_rnd.hpp:18 in interleave_mem_rnd<t, n>, x1 | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=x2 core=RAM_1P_BRAM     | ../src/./interleave_mem_rnd.hpp:19 in interleave_mem_rnd<t, n>, x2 | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable = x0 core = RAM_1P_BRAM | ../src/./interleave_mem_seq.hpp:19 in interleave_mem_seq<t, n>     | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable = x1 core = RAM_1P_BRAM | ../src/./interleave_mem_seq.hpp:20 in interleave_mem_seq<t, n>     | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable = x2 core = RAM_1P_BRAM | ../src/./interleave_mem_seq.hpp:21 in interleave_mem_seq<t, n>     | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=x_in core=RAM_1P_BRAM   | ../src/interleave.cpp:7 in interleave, x_in                        | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=y core=RAM_1P_BRAM      | ../src/interleave.cpp:8 in interleave, y                           | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=x core=RAM_1P_BRAM      | ../src/interleave.cpp:11 in interleave, x                          | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=x_in core=RAM_1P_BRAM   | ../src/interleave_manual_rnd.cpp:6 in interleave_manual_rnd, x_in  | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
|          |                                  |                                                                    | The resource pragma (storage) on function argument, in 'call' is unsupported |
| resource | variable=y core=RAM_1P_BRAM      | ../src/interleave_manual_rnd.cpp:7 in interleave_manual_rnd, y     | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=x_in core=RAM_1P_BRAM   | ../src/interleave_manual_seq.cpp:6 in interleave_manual_seq, x_in  | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
| resource | variable=y core=RAM_1P_BRAM      | ../src/interleave_manual_seq.cpp:7 in interleave_manual_seq, y     | 'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead   |
+----------+----------------------------------+--------------------------------------------------------------------+------------------------------------------------------------------------------+

* Valid Pragma Syntax
+-----------------+----------------------------------+--------------------------------------------------------------+
| Type            | Options                          | Location                                                     |
+-----------------+----------------------------------+--------------------------------------------------------------+
| inline          |                                  | ../src/./read_mem_rnd.hpp:11 in read_rnd                     |
| array_partition | variable=x cyclic factor=3 dim=1 | ../src/interleave.cpp:12 in interleave, x                    |
| pipeline        | II=1                             | ../src/interleave.cpp:19 in interleave                       |
| pipeline        | II=1                             | ../src/interleave.cpp:24 in interleave                       |
| pipeline        | II=1                             | ../src/interleave_manual_rnd.cpp:15 in interleave_manual_rnd |
| pipeline        | II=1                             | ../src/interleave_manual_rnd.cpp:20 in interleave_manual_rnd |
| pipeline        | II=1                             | ../src/interleave_manual_seq.cpp:15 in interleave_manual_seq |
| pipeline        | II=1                             | ../src/interleave_manual_seq.cpp:20 in interleave_manual_seq |
+-----------------+----------------------------------+--------------------------------------------------------------+


