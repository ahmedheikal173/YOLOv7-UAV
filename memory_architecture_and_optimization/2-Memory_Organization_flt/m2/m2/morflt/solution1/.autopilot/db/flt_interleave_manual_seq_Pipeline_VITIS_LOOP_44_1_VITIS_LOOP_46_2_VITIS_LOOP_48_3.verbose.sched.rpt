

================================================================
== Vitis HLS Report for 'flt_interleave_manual_seq_Pipeline_VITIS_LOOP_44_1_VITIS_LOOP_46_2_VITIS_LOOP_48_3'
================================================================
* Date:           Fri Jun  7 17:45:50 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        morflt
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.623 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     3569|     3569|  35.690 us|  35.690 us|  3569|  3569|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_44_1_VITIS_LOOP_46_2_VITIS_LOOP_48_3  |     3567|     3567|         5|          1|          1|  3564|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.62>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 8 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%idx_2 = alloca i32 1"   --->   Operation 9 'alloca' 'idx_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 10 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%idx = alloca i32 1"   --->   Operation 11 'alloca' 'idx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 12 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 13 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvars_iv456 = alloca i32 1"   --->   Operation 14 'alloca' 'indvars_iv456' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten15 = alloca i32 1"   --->   Operation 15 'alloca' 'indvar_flatten15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %tmpx_V, i64 666, i64 30, i64 18446744073709551615"   --->   Operation 16 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %x_in, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.46ns)   --->   "%store_ln0 = store i12 0, i12 %indvar_flatten15"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 19 [1/1] (0.46ns)   --->   "%store_ln0 = store i12 0, i12 %indvars_iv456"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 20 [1/1] (0.46ns)   --->   "%store_ln0 = store i6 0, i6 %k"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 21 [1/1] (0.46ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 22 [1/1] (0.46ns)   --->   "%store_ln0 = store i12 0, i12 %idx"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 23 [1/1] (0.46ns)   --->   "%store_ln0 = store i4 0, i4 %i"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 24 [1/1] (0.46ns)   --->   "%store_ln0 = store i12 0, i12 %idx_2"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 25 [1/1] (0.46ns)   --->   "%store_ln0 = store i4 0, i4 %j"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 26 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten15_load = load i12 %indvar_flatten15" [../../src/tomatrix.cpp:44]   --->   Operation 27 'load' 'indvar_flatten15_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.82ns)   --->   "%icmp_ln44 = icmp_eq  i12 %indvar_flatten15_load, i12 3564" [../../src/tomatrix.cpp:44]   --->   Operation 28 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 0.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.99ns)   --->   "%add_ln44_2 = add i12 %indvar_flatten15_load, i12 1" [../../src/tomatrix.cpp:44]   --->   Operation 29 'add' 'add_ln44_2' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %icmp_ln44, void %.split13, void %_Z10frommatrixPA9_A44_6ap_intILi8EEPS0_.exit.exitStub" [../../src/tomatrix.cpp:44]   --->   Operation 30 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%j_load = load i4 %j" [../../src/tomatrix.cpp:48]   --->   Operation 31 'load' 'j_load' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%i_load = load i4 %i" [../../src/tomatrix.cpp:44]   --->   Operation 32 'load' 'i_load' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i8 %indvar_flatten" [../../src/tomatrix.cpp:46]   --->   Operation 33 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.70ns)   --->   "%icmp_ln46 = icmp_eq  i8 %indvar_flatten_load, i8 81" [../../src/tomatrix.cpp:46]   --->   Operation 34 'icmp' 'icmp_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.18ns)   --->   "%select_ln44_1 = select i1 %icmp_ln46, i4 0, i4 %i_load" [../../src/tomatrix.cpp:44]   --->   Operation 35 'select' 'select_ln44_1' <Predicate = (!icmp_ln44)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node and_ln44)   --->   "%xor_ln44 = xor i1 %icmp_ln46, i1 1" [../../src/tomatrix.cpp:44]   --->   Operation 36 'xor' 'xor_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.72ns)   --->   "%icmp_ln48 = icmp_eq  i4 %j_load, i4 9" [../../src/tomatrix.cpp:48]   --->   Operation 37 'icmp' 'icmp_ln48' <Predicate = (!icmp_ln44)> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.14ns) (out node of the LUT)   --->   "%and_ln44 = and i1 %icmp_ln48, i1 %xor_ln44" [../../src/tomatrix.cpp:44]   --->   Operation 38 'and' 'and_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.80ns)   --->   "%add_ln46 = add i4 %select_ln44_1, i4 1" [../../src/tomatrix.cpp:46]   --->   Operation 39 'add' 'add_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node select_ln46_1)   --->   "%or_ln46 = or i1 %and_ln44, i1 %icmp_ln46" [../../src/tomatrix.cpp:46]   --->   Operation 40 'or' 'or_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.18ns) (out node of the LUT)   --->   "%select_ln46_1 = select i1 %or_ln46, i4 0, i4 %j_load" [../../src/tomatrix.cpp:46]   --->   Operation 41 'select' 'select_ln46_1' <Predicate = (!icmp_ln44)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.18ns)   --->   "%select_ln46_2 = select i1 %and_ln44, i4 %add_ln46, i4 %select_ln44_1" [../../src/tomatrix.cpp:46]   --->   Operation 42 'select' 'select_ln46_2' <Predicate = (!icmp_ln44)> <Delay = 0.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i4 %select_ln46_2" [../../src/tomatrix.cpp:50]   --->   Operation 43 'zext' 'zext_ln50' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %select_ln46_2, i3 0" [../../src/tomatrix.cpp:50]   --->   Operation 44 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln50_1 = zext i7 %tmp" [../../src/tomatrix.cpp:50]   --->   Operation 45 'zext' 'zext_ln50_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.85ns)   --->   "%add_ln50 = add i12 %zext_ln50_1, i12 %zext_ln50" [../../src/tomatrix.cpp:50]   --->   Operation 46 'add' 'add_ln50' <Predicate = (!icmp_ln44)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln50_2 = zext i4 %select_ln46_1" [../../src/tomatrix.cpp:50]   --->   Operation 47 'zext' 'zext_ln50_2' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (1.78ns) (grouped into DSP with root node add_ln50_2)   --->   "%add_ln50_1 = add i12 %add_ln50, i12 %zext_ln50_2" [../../src/tomatrix.cpp:50]   --->   Operation 48 'add' 'add_ln50_1' <Predicate = (!icmp_ln44)> <Delay = 1.78> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 49 [3/3] (1.08ns) (grouped into DSP with root node add_ln50_2)   --->   "%mul_ln50 = mul i12 %add_ln50_1, i12 44" [../../src/tomatrix.cpp:50]   --->   Operation 49 'mul' 'mul_ln50' <Predicate = (!icmp_ln44)> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 50 [1/1] (0.80ns)   --->   "%add_ln48 = add i4 %select_ln46_1, i4 1" [../../src/tomatrix.cpp:48]   --->   Operation 50 'add' 'add_ln48' <Predicate = (!icmp_ln44)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.87ns)   --->   "%add_ln46_2 = add i8 %indvar_flatten_load, i8 1" [../../src/tomatrix.cpp:46]   --->   Operation 51 'add' 'add_ln46_2' <Predicate = (!icmp_ln44)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.40ns)   --->   "%select_ln46_4 = select i1 %icmp_ln46, i8 1, i8 %add_ln46_2" [../../src/tomatrix.cpp:46]   --->   Operation 52 'select' 'select_ln46_4' <Predicate = (!icmp_ln44)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.46ns)   --->   "%store_ln44 = store i12 %add_ln44_2, i12 %indvar_flatten15" [../../src/tomatrix.cpp:44]   --->   Operation 53 'store' 'store_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.46>
ST_1 : Operation 54 [1/1] (0.46ns)   --->   "%store_ln46 = store i8 %select_ln46_4, i8 %indvar_flatten" [../../src/tomatrix.cpp:46]   --->   Operation 54 'store' 'store_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.46>
ST_1 : Operation 55 [1/1] (0.46ns)   --->   "%store_ln46 = store i4 %select_ln46_2, i4 %i" [../../src/tomatrix.cpp:46]   --->   Operation 55 'store' 'store_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.46>
ST_1 : Operation 56 [1/1] (0.46ns)   --->   "%store_ln48 = store i4 %add_ln48, i4 %j" [../../src/tomatrix.cpp:48]   --->   Operation 56 'store' 'store_ln48' <Predicate = (!icmp_ln44)> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.08>
ST_2 : Operation 57 [2/3] (1.08ns) (grouped into DSP with root node add_ln50_2)   --->   "%mul_ln50 = mul i12 %add_ln50_1, i12 44" [../../src/tomatrix.cpp:50]   --->   Operation 57 'mul' 'mul_ln50' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 2.03>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%k_load = load i6 %k" [../../src/tomatrix.cpp:44]   --->   Operation 58 'load' 'k_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.84ns)   --->   "%add_ln44 = add i6 %k_load, i6 1" [../../src/tomatrix.cpp:44]   --->   Operation 59 'add' 'add_ln44' <Predicate = (icmp_ln46)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.36ns)   --->   "%select_ln44_3 = select i1 %icmp_ln46, i6 %add_ln44, i6 %k_load" [../../src/tomatrix.cpp:44]   --->   Operation 60 'select' 'select_ln44_3' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i6 %select_ln44_3" [../../src/tomatrix.cpp:46]   --->   Operation 61 'zext' 'zext_ln46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/3] (0.00ns) (grouped into DSP with root node add_ln50_2)   --->   "%mul_ln50 = mul i12 %add_ln50_1, i12 44" [../../src/tomatrix.cpp:50]   --->   Operation 62 'mul' 'mul_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 63 [2/2] (0.83ns) (root node of the DSP)   --->   "%add_ln50_2 = add i12 %mul_ln50, i12 %zext_ln46" [../../src/tomatrix.cpp:50]   --->   Operation 63 'add' 'add_ln50_2' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 64 [1/1] (0.46ns)   --->   "%store_ln44 = store i6 %select_ln44_3, i6 %k" [../../src/tomatrix.cpp:44]   --->   Operation 64 'store' 'store_ln44' <Predicate = true> <Delay = 0.46>

State 4 <SV = 3> <Delay = 2.12>
ST_4 : Operation 65 [1/2] (0.83ns) (root node of the DSP)   --->   "%add_ln50_2 = add i12 %mul_ln50, i12 %zext_ln46" [../../src/tomatrix.cpp:50]   --->   Operation 65 'add' 'add_ln50_2' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln50_3 = zext i12 %add_ln50_2" [../../src/tomatrix.cpp:50]   --->   Operation 66 'zext' 'zext_ln50_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%x_in_addr = getelementptr i8 %x_in, i64 0, i64 %zext_ln50_3" [../../src/tomatrix.cpp:50]   --->   Operation 67 'getelementptr' 'x_in_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [2/2] (1.29ns)   --->   "%x_in_load = load i12 %x_in_addr" [../../src/tomatrix.cpp:50]   --->   Operation 68 'load' 'x_in_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3564> <RAM>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 93 'ret' 'ret_ln0' <Predicate = (icmp_ln44)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.18>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%idx_2_load = load i12 %idx_2" [../../src/tomatrix.cpp:44]   --->   Operation 69 'load' 'idx_2_load' <Predicate = (!icmp_ln46 & !and_ln44)> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%idx_load = load i12 %idx" [../../src/tomatrix.cpp:44]   --->   Operation 70 'load' 'idx_load' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%indvars_iv456_load = load i12 %indvars_iv456" [../../src/tomatrix.cpp:44]   --->   Operation 71 'load' 'indvars_iv456_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.99ns)   --->   "%add_ln44_1 = add i12 %indvars_iv456_load, i12 81" [../../src/tomatrix.cpp:44]   --->   Operation 72 'add' 'add_ln44_1' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_44_1_VITIS_LOOP_46_2_VITIS_LOOP_48_3_str"   --->   Operation 73 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 3564, i64 3564, i64 3564"   --->   Operation 74 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.36ns)   --->   "%select_ln44 = select i1 %icmp_ln46, i12 %add_ln44_1, i12 %idx_load" [../../src/tomatrix.cpp:44]   --->   Operation 75 'select' 'select_ln44' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node select_ln46)   --->   "%select_ln44_2 = select i1 %icmp_ln46, i12 %add_ln44_1, i12 %idx_2_load" [../../src/tomatrix.cpp:44]   --->   Operation 76 'select' 'select_ln44_2' <Predicate = (!and_ln44)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (0.36ns)   --->   "%select_ln44_4 = select i1 %icmp_ln46, i12 %add_ln44_1, i12 %indvars_iv456_load" [../../src/tomatrix.cpp:44]   --->   Operation 77 'select' 'select_ln44_4' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.99ns)   --->   "%add_ln46_1 = add i12 %select_ln44, i12 9" [../../src/tomatrix.cpp:46]   --->   Operation 78 'add' 'add_ln46_1' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_46_2_VITIS_LOOP_48_3_str"   --->   Operation 79 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.36ns) (out node of the LUT)   --->   "%select_ln46 = select i1 %and_ln44, i12 %add_ln46_1, i12 %select_ln44_2" [../../src/tomatrix.cpp:46]   --->   Operation 80 'select' 'select_ln46' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.36ns)   --->   "%select_ln46_3 = select i1 %and_ln44, i12 %add_ln46_1, i12 %select_ln44" [../../src/tomatrix.cpp:46]   --->   Operation 81 'select' 'select_ln46_3' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i12 %select_ln46" [../../src/tomatrix.cpp:48]   --->   Operation 82 'zext' 'zext_ln48' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%specpipeline_ln43 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [../../src/tomatrix.cpp:43]   --->   Operation 83 'specpipeline' 'specpipeline_ln43' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%specloopname_ln43 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [../../src/tomatrix.cpp:43]   --->   Operation 84 'specloopname' 'specloopname_ln43' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/2] (1.29ns)   --->   "%x_in_load = load i12 %x_in_addr" [../../src/tomatrix.cpp:50]   --->   Operation 85 'load' 'x_in_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3564> <RAM>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%tmpx_V_addr = getelementptr i8 %tmpx_V, i64 0, i64 %zext_ln48" [../../src/tomatrix.cpp:50]   --->   Operation 86 'getelementptr' 'tmpx_V_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (1.29ns)   --->   "%store_ln50 = store i8 %x_in_load, i12 %tmpx_V_addr" [../../src/tomatrix.cpp:50]   --->   Operation 87 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_T2P_BRAM">   --->   Core 99 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3564> <RAM>
ST_5 : Operation 88 [1/1] (0.99ns)   --->   "%add_ln51 = add i12 %select_ln46, i12 1" [../../src/tomatrix.cpp:51]   --->   Operation 88 'add' 'add_ln51' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.46ns)   --->   "%store_ln44 = store i12 %select_ln44_4, i12 %indvars_iv456" [../../src/tomatrix.cpp:44]   --->   Operation 89 'store' 'store_ln44' <Predicate = true> <Delay = 0.46>
ST_5 : Operation 90 [1/1] (0.46ns)   --->   "%store_ln46 = store i12 %select_ln46_3, i12 %idx" [../../src/tomatrix.cpp:46]   --->   Operation 90 'store' 'store_ln46' <Predicate = true> <Delay = 0.46>
ST_5 : Operation 91 [1/1] (0.46ns)   --->   "%store_ln51 = store i12 %add_ln51, i12 %idx_2" [../../src/tomatrix.cpp:51]   --->   Operation 91 'store' 'store_ln51' <Predicate = true> <Delay = 0.46>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 92 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.62ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [7]  (0 ns)
	'load' operation ('indvar_flatten_load', ../../src/tomatrix.cpp:46) on local variable 'indvar_flatten' [32]  (0 ns)
	'icmp' operation ('icmp_ln46', ../../src/tomatrix.cpp:46) [39]  (0.709 ns)
	'select' operation ('select_ln44_1', ../../src/tomatrix.cpp:44) [41]  (0.187 ns)
	'add' operation ('add_ln46', ../../src/tomatrix.cpp:46) [49]  (0.809 ns)
	'select' operation ('select_ln46_2', ../../src/tomatrix.cpp:46) [55]  (0.187 ns)
	'add' operation ('add_ln50', ../../src/tomatrix.cpp:50) [59]  (0.856 ns)
	'add' operation of DSP[64] ('add_ln50_1', ../../src/tomatrix.cpp:50) [62]  (1.79 ns)
	'mul' operation of DSP[64] ('mul_ln50', ../../src/tomatrix.cpp:50) [63]  (1.09 ns)

 <State 2>: 1.09ns
The critical path consists of the following:
	'mul' operation of DSP[64] ('mul_ln50', ../../src/tomatrix.cpp:50) [63]  (1.09 ns)

 <State 3>: 2.03ns
The critical path consists of the following:
	'load' operation ('k_load', ../../src/tomatrix.cpp:44) on local variable 'k' [33]  (0 ns)
	'add' operation ('add_ln44', ../../src/tomatrix.cpp:44) [35]  (0.84 ns)
	'select' operation ('select_ln44_3', ../../src/tomatrix.cpp:44) [43]  (0.363 ns)
	'add' operation of DSP[64] ('add_ln50_2', ../../src/tomatrix.cpp:50) [64]  (0.831 ns)

 <State 4>: 2.13ns
The critical path consists of the following:
	'add' operation of DSP[64] ('add_ln50_2', ../../src/tomatrix.cpp:50) [64]  (0.831 ns)
	'getelementptr' operation ('x_in_addr', ../../src/tomatrix.cpp:50) [66]  (0 ns)
	'load' operation ('x_in_load', ../../src/tomatrix.cpp:50) on array 'x_in' [70]  (1.3 ns)

 <State 5>: 4.19ns
The critical path consists of the following:
	'load' operation ('indvars_iv456_load', ../../src/tomatrix.cpp:44) on local variable 'indvars_iv456' [34]  (0 ns)
	'add' operation ('add_ln44_1', ../../src/tomatrix.cpp:44) [36]  (0.996 ns)
	'select' operation ('select_ln44', ../../src/tomatrix.cpp:44) [40]  (0.369 ns)
	'add' operation ('add_ln46_1', ../../src/tomatrix.cpp:46) [50]  (0.996 ns)
	'select' operation ('select_ln46', ../../src/tomatrix.cpp:46) [52]  (0.369 ns)
	'add' operation ('add_ln51', ../../src/tomatrix.cpp:51) [73]  (0.996 ns)
	'store' operation ('store_ln51', ../../src/tomatrix.cpp:51) of variable 'add_ln51', ../../src/tomatrix.cpp:51 on local variable 'idx' [83]  (0.46 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
