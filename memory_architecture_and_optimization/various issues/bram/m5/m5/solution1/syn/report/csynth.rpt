

================================================================
== Synthesis Summary Report of 'BRAM_filter'
================================================================
+ General Information: 
    * Date:           Sat Jun  8 22:03:58 2024
    * Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
    * Project:        m5
    * Solution:       solution1 (Vitis Kernel Flow Target)
    * Product family: zynquplus
    * Target device:  xczu7ev-ffvc1156-2-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-----------------------------------------+------+------+---------+-----------+----------+---------+------+----------+---------+----+-----------+-----------+-----+
    |                 Modules                 | Issue|      | Latency |  Latency  | Iteration|         | Trip |          |         |    |           |           |     |
    |                 & Loops                 | Type | Slack| (cycles)|    (ns)   |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF    |    LUT    | URAM|
    +-----------------------------------------+------+------+---------+-----------+----------+---------+------+----------+---------+----+-----------+-----------+-----+
    |+ BRAM_filter                            |     -|  4.83|      399|  3.990e+03|         -|      400|     -|        no|  1 (~0%)|   -|  155 (~0%)|  238 (~0%)|    -|
    | + BRAM_filter_Pipeline_VITIS_LOOP_27_2  |     -|  4.83|      398|  3.980e+03|         -|      398|     -|        no|        -|   -|   21 (~0%)|   65 (~0%)|    -|
    |  o VITIS_LOOP_27_2                      |     -|  7.30|      396|  3.960e+03|         2|        1|   396|       yes|        -|   -|          -|          -|    -|
    | + BRAM_filter_Pipeline_VITIS_LOOP_20_1  |     -|  4.83|      398|  3.980e+03|         -|      398|     -|        no|        -|   -|   76 (~0%)|   65 (~0%)|    -|
    |  o VITIS_LOOP_20_1                      |     -|  7.30|      396|  3.960e+03|         2|        1|   396|       yes|        -|   -|          -|          -|    -|
    +-----------------------------------------+------+------+---------+-----------+----------+---------+------+----------+---------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 5             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                             |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                               |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN 5=CHAN2_INT_EN                           |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST 5=CHAN2_INT_ST                           |
| s_axi_control | load     | 0x10   | 32    | W      | Data signal of load              |                                                                        |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+

* BRAM
+-------------+------------+---------------+
| Interface   | Data Width | Address Width |
+-------------+------------+---------------+
| out_r_PORTA | 8          | 32            |
| x_in_PORTA  | 8          | 32            |
+-------------+------------+---------------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+------------+
| Argument | Direction | Datatype   |
+----------+-----------+------------+
| x_in     | in        | ap_int<8>* |
| out      | out       | ap_int<8>* |
| load     | in        | bool       |
+----------+-----------+------------+

* SW-to-HW Mapping
+----------+---------------+-----------+--------------------------------+
| Argument | HW Interface  | HW Type   | HW Info                        |
+----------+---------------+-----------+--------------------------------+
| x_in     | x_in_PORTA    | interface |                                |
| out      | out_r_PORTA   | interface |                                |
| load     | s_axi_control | register  | name=load offset=0x10 range=32 |
+----------+---------------+-----------+--------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

  No burst in design

================================================================
== Bind Op Report
================================================================
+-----------------------------------------+-----+--------+----------+-----+--------+---------+
| Name                                    | DSP | Pragma | Variable | Op  | Impl   | Latency |
+-----------------------------------------+-----+--------+----------+-----+--------+---------+
| + BRAM_filter                           | 0   |        |          |     |        |         |
|  + BRAM_filter_Pipeline_VITIS_LOOP_27_2 | 0   |        |          |     |        |         |
|    i_fu_87_p2                           | -   |        | i        | add | fabric | 0       |
|  + BRAM_filter_Pipeline_VITIS_LOOP_20_1 | 0   |        |          |     |        |         |
|    i_fu_87_p2                           | -   |        | i        | add | fabric | 0       |
+-----------------------------------------+-----+--------+----------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
+---------------+------+------+--------+----------+---------+------+---------+
| Name          | BRAM | URAM | Pragma | Variable | Storage | Impl | Latency |
+---------------+------+------+--------+----------+---------+------+---------+
| + BRAM_filter | 1    | 0    |        |          |         |      |         |
|   x_mems_V_U  | 1    | -    | pragma | x_mems_V | ram_1p  | bram | 1       |
+---------------+------+------+--------+----------+---------+------+---------+


================================================================
== User Pragma Report
================================================================
* Valid Pragma Syntax
+--------------+-------------------------------------+------------------------------------------------+
| Type         | Options                             | Location                                       |
+--------------+-------------------------------------+------------------------------------------------+
| bind_storage | variable=mems type=RAM_1P impl=BRAM | ../src/./BRAM_flt.hpp:19 in bram_flt, mems     |
| bind_storage | variable=mems type=RAM_1P impl=BRAM | ../src/./BRAM_img.hpp:18 in bram_img, mems     |
| interface    | mode=BRAM port=x_in                 | ../src/BRAM_flt.cpp:6 in bram_filter, x_in     |
| interface    | mode=BRAM port=out                  | ../src/BRAM_flt.cpp:7 in bram_filter, out      |
| pipeline     | II=1                                | ../src/BRAM_flt.cpp:21 in bram_filter          |
| pipeline     | II=1                                | ../src/BRAM_flt.cpp:28 in bram_filter          |
| interface    | mode=BRAM port=x_in                 | ../src/BRAM_img.cpp:6 in bram_image, x_in      |
| interface    | mode=BRAM port=out                  | ../src/BRAM_img.cpp:7 in bram_image, out       |
| pipeline     | II=1                                | ../src/BRAM_img.cpp:21 in bram_image           |
| pipeline     | II=1                                | ../src/BRAM_img.cpp:28 in bram_image           |
| interface    | mode=BRAM port=m_in                 | ../src/tomatrix.cpp:8 in tomatrixi, m_in       |
| interface    | mode=BRAM port=m_out                | ../src/tomatrix.cpp:9 in tomatrixi, m_out      |
| pipeline     | II=1                                | ../src/tomatrix.cpp:16 in tomatrixi            |
| interface    | mode=BRAM port=mm_in                | ../src/tomatrix.cpp:27 in frommatrixi, mm_in   |
| interface    | mode=BRAM port=mm_out               | ../src/tomatrix.cpp:28 in frommatrixi, mm_out  |
| pipeline     | II=1                                | ../src/tomatrix.cpp:35 in frommatrixi          |
| interface    | mode=BRAM port=mI_in                | ../src/tomatrix.cpp:46 in tomatrixf, mI_in     |
| interface    | mode=BRAM port=mI_out               | ../src/tomatrix.cpp:47 in tomatrixf, mI_out    |
| pipeline     | II=1                                | ../src/tomatrix.cpp:54 in tomatrixf            |
| interface    | mode=BRAM port=mmI_in               | ../src/tomatrix.cpp:65 in frommatrixf, mmI_in  |
| interface    | mode=BRAM port=mmI_out              | ../src/tomatrix.cpp:66 in frommatrixf, mmI_out |
| pipeline     | II=1                                | ../src/tomatrix.cpp:73 in frommatrixf          |
+--------------+-------------------------------------+------------------------------------------------+


