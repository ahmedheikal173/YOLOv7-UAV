// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="interleave_manual_seq_interleave_manual_seq,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.525000,HLS_SYN_LAT=819204,HLS_SYN_TPT=none,HLS_SYN_MEM=600,HLS_SYN_DSP=0,HLS_SYN_FF=219,HLS_SYN_LUT=552,HLS_VERSION=2021_2}" *)

module interleave_manual_seq (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        x_in_Addr_A,
        x_in_EN_A,
        x_in_WEN_A,
        x_in_Din_A,
        x_in_Dout_A,
        x_in_Clk_A,
        x_in_Rst_A,
        y_Addr_A,
        y_EN_A,
        y_WEN_A,
        y_Din_A,
        y_Dout_A,
        y_Clk_A,
        y_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
output  [31:0] x_in_Addr_A;
output   x_in_EN_A;
output  [0:0] x_in_WEN_A;
output  [7:0] x_in_Din_A;
input  [7:0] x_in_Dout_A;
output   x_in_Clk_A;
output   x_in_Rst_A;
output  [31:0] y_Addr_A;
output   y_EN_A;
output  [0:0] y_WEN_A;
output  [7:0] y_Din_A;
input  [7:0] y_Dout_A;
output   y_Clk_A;
output   y_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire    load;
reg   [0:0] guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x;
reg   [18:0] x_x0_V_address0;
reg    x_x0_V_ce0;
reg    x_x0_V_we0;
wire   [7:0] x_x0_V_q0;
reg   [18:0] x_x1_V_address0;
reg    x_x1_V_ce0;
reg    x_x1_V_we0;
wire   [7:0] x_x1_V_q0;
reg   [18:0] x_x2_V_address0;
reg    x_x2_V_ce0;
reg    x_x2_V_we0;
wire   [7:0] x_x2_V_q0;
reg   [1:0] x_sel_V;
reg   [20:0] x_idx_V;
wire   [0:0] load_read_read_fu_74_p2;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_done;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_idle;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_ready;
wire   [31:0] grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_Addr_A;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_EN_A;
wire   [0:0] grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_WEN_A;
wire   [7:0] grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_Din_A;
wire   [18:0] grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x0_V_address0;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x0_V_ce0;
wire   [18:0] grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x1_V_address0;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x1_V_ce0;
wire   [18:0] grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x2_V_address0;
wire    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x2_V_ce0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_done;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_idle;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_ready;
wire   [31:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_Addr_A;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_EN_A;
wire   [0:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_WEN_A;
wire   [7:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_Din_A;
wire   [0:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_flag_0_out;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_flag_0_out_ap_vld;
wire   [20:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_new_0_out;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_new_0_out_ap_vld;
wire   [1:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_t_V_out;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_t_V_out_ap_vld;
wire   [18:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_address0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_ce0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_we0;
wire   [7:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_d0;
wire   [18:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_address0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_ce0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_we0;
wire   [7:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_d0;
wire   [18:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_address0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_ce0;
wire    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_we0;
wire   [7:0] grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_d0;
reg    grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start_reg;
reg    ap_block_state1_ignore_call0;
wire    ap_CS_fsm_state2;
reg    grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start_reg;
reg    ap_block_state1_ignore_call2;
wire    ap_CS_fsm_state3;
reg    ap_block_state1;
wire   [0:0] guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x_load_load_fu_109_p1;
wire    ap_CS_fsm_state4;
wire   [0:0] x_idx_V_flag_0_loc_load_load_fu_129_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x = 1'd0;
#0 x_sel_V = 2'd0;
#0 x_idx_V = 21'd0;
#0 grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start_reg = 1'b0;
#0 grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start_reg = 1'b0;
end

interleave_manual_seq_x_x0_V_RAM_1P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 409600 ),
    .AddressWidth( 19 ))
x_x0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_x0_V_address0),
    .ce0(x_x0_V_ce0),
    .we0(x_x0_V_we0),
    .d0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_d0),
    .q0(x_x0_V_q0)
);

interleave_manual_seq_x_x0_V_RAM_1P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 409600 ),
    .AddressWidth( 19 ))
x_x1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_x1_V_address0),
    .ce0(x_x1_V_ce0),
    .we0(x_x1_V_we0),
    .d0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_d0),
    .q0(x_x1_V_q0)
);

interleave_manual_seq_x_x0_V_RAM_1P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 409600 ),
    .AddressWidth( 19 ))
x_x2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(x_x2_V_address0),
    .ce0(x_x2_V_ce0),
    .we0(x_x2_V_we0),
    .d0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_d0),
    .q0(x_x2_V_q0)
);

interleave_manual_seq_interleave_manual_seq_Pipeline_WRITE grp_interleave_manual_seq_Pipeline_WRITE_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start),
    .ap_done(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_done),
    .ap_idle(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_idle),
    .ap_ready(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_ready),
    .y_Addr_A(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_Addr_A),
    .y_EN_A(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_EN_A),
    .y_WEN_A(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_WEN_A),
    .y_Din_A(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_Din_A),
    .y_Dout_A(8'd0),
    .x_x0_V_address0(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x0_V_address0),
    .x_x0_V_ce0(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x0_V_ce0),
    .x_x0_V_q0(x_x0_V_q0),
    .x_x1_V_address0(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x1_V_address0),
    .x_x1_V_ce0(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x1_V_ce0),
    .x_x1_V_q0(x_x1_V_q0),
    .x_x2_V_address0(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x2_V_address0),
    .x_x2_V_ce0(grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x2_V_ce0),
    .x_x2_V_q0(x_x2_V_q0)
);

interleave_manual_seq_interleave_manual_seq_Pipeline_LOAD grp_interleave_manual_seq_Pipeline_LOAD_fu_92(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start),
    .ap_done(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_done),
    .ap_idle(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_idle),
    .ap_ready(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_ready),
    .x_idx_V_load(x_idx_V),
    .x_sel_V_load(x_sel_V),
    .x_in_Addr_A(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_Addr_A),
    .x_in_EN_A(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_EN_A),
    .x_in_WEN_A(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_WEN_A),
    .x_in_Din_A(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_Din_A),
    .x_in_Dout_A(x_in_Dout_A),
    .x_idx_V_flag_0_out(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_flag_0_out),
    .x_idx_V_flag_0_out_ap_vld(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_flag_0_out_ap_vld),
    .x_idx_V_new_0_out(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_new_0_out),
    .x_idx_V_new_0_out_ap_vld(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_new_0_out_ap_vld),
    .t_V_out(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_t_V_out),
    .t_V_out_ap_vld(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_t_V_out_ap_vld),
    .x_x0_V_address0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_address0),
    .x_x0_V_ce0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_ce0),
    .x_x0_V_we0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_we0),
    .x_x0_V_d0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_d0),
    .x_x1_V_address0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_address0),
    .x_x1_V_ce0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_ce0),
    .x_x1_V_we0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_we0),
    .x_x1_V_d0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_d0),
    .x_x2_V_address0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_address0),
    .x_x2_V_ce0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_ce0),
    .x_x2_V_we0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_we0),
    .x_x2_V_d0(grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_d0)
);

interleave_manual_seq_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .load(load),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (load_read_read_fu_74_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start_reg <= 1'b1;
        end else if ((grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_ready == 1'b1)) begin
            grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (load_read_read_fu_74_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_ready == 1'b1)) begin
            grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x_load_load_fu_109_p1 == 1'd0))) begin
        guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((load_read_read_fu_74_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (x_idx_V_flag_0_loc_load_load_fu_129_p1 == 1'd1))) begin
        x_idx_V <= grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_new_0_out;
    end
end

always @ (posedge ap_clk) begin
    if (((load_read_read_fu_74_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x_sel_V <= grp_interleave_manual_seq_Pipeline_LOAD_fu_92_t_V_out;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x0_V_address0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_x0_V_address0 = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x0_V_address0;
    end else begin
        x_x0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x0_V_ce0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_x0_V_ce0 = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x0_V_ce0;
    end else begin
        x_x0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x0_V_we0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x0_V_we0;
    end else begin
        x_x0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x1_V_address0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_x1_V_address0 = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x1_V_address0;
    end else begin
        x_x1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x1_V_ce0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_x1_V_ce0 = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x1_V_ce0;
    end else begin
        x_x1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x1_V_we0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x1_V_we0;
    end else begin
        x_x1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x2_V_address0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_x2_V_address0 = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x2_V_address0;
    end else begin
        x_x2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x2_V_ce0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_x2_V_ce0 = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_x_x2_V_ce0;
    end else begin
        x_x2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_x2_V_we0 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_x2_V_we0;
    end else begin
        x_x2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (load_read_read_fu_74_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (load_read_read_fu_74_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call0 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call2 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

assign grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_ap_start_reg;

assign grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_ap_start_reg;

assign guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x_load_load_fu_109_p1 = guard_variable_for_interleave_manual_seq_ap_int_8_ap_int_8_bool_x;

assign load_read_read_fu_74_p2 = load;

assign x_idx_V_flag_0_loc_load_load_fu_129_p1 = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_idx_V_flag_0_out;

assign x_in_Addr_A = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_Addr_A;

assign x_in_Clk_A = ap_clk;

assign x_in_Din_A = 8'd0;

assign x_in_EN_A = grp_interleave_manual_seq_Pipeline_LOAD_fu_92_x_in_EN_A;

assign x_in_Rst_A = ap_rst_n_inv;

assign x_in_WEN_A = 1'd0;

assign y_Addr_A = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_Addr_A;

assign y_Clk_A = ap_clk;

assign y_Din_A = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_Din_A;

assign y_EN_A = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_EN_A;

assign y_Rst_A = ap_rst_n_inv;

assign y_WEN_A = grp_interleave_manual_seq_Pipeline_WRITE_fu_80_y_WEN_A;

endmodule //interleave_manual_seq
