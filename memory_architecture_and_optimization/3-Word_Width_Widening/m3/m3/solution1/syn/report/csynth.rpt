

================================================================
== Synthesis Summary Report of 'word_width'
================================================================
+ General Information: 
    * Date:           Wed Jun  5 00:33:03 2024
    * Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
    * Project:        m3
    * Solution:       solution1 (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcvu11p-flga2577-1-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +------------------------------+--------+-------+---------+-----------+----------+---------+---------+----------+-----------+----+------------+------------+-----+
    |            Modules           |  Issue |       | Latency |  Latency  | Iteration|         |   Trip  |          |           |    |            |            |     |
    |            & Loops           |  Type  | Slack | (cycles)|    (ns)   |  Latency | Interval|  Count  | Pipelined|   BRAM    | DSP|     FF     |     LUT    | URAM|
    +------------------------------+--------+-------+---------+-----------+----------+---------+---------+----------+-----------+----+------------+------------+-----+
    |+ word_width                  |  Timing|  -0.00|  1228875|  1.229e+07|         -|  1228876|        -|        no|  608 (15%)|   -|  3519 (~0%)|  4246 (~0%)|    -|
    | + word_width_Pipeline_WRITE  |  Timing|  -0.00|   409603|  4.096e+06|         -|   409603|        -|        no|          -|   -|   539 (~0%)|   640 (~0%)|    -|
    |  o WRITE                     |       -|   7.30|   409601|  4.096e+06|         3|        1|   409600|       yes|          -|   -|           -|           -|    -|
    | + word_width_Pipeline_LOAD   |  Timing|  -0.00|  1228803|  1.229e+07|         -|  1228803|        -|        no|          -|   -|  1109 (~0%)|   602 (~0%)|    -|
    |  o LOAD                      |       -|   7.30|  1228801|  1.229e+07|         3|        1|  1228800|       yes|          -|   -|           -|           -|    -|
    +------------------------------+--------+-------+---------+-----------+----------+---------+---------+----------+-----------+----+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem | 8 -> 512   | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          | BRAM=58           |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                             |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                               |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN 5=CHAN2_INT_EN                           |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST 5=CHAN2_INT_ST                           |
| s_axi_control | x_in_1   | 0x10   | 32    | W      | Data signal of x_in              |                                                                        |
| s_axi_control | x_in_2   | 0x14   | 32    | W      | Data signal of x_in              |                                                                        |
| s_axi_control | y_1      | 0x1c   | 32    | W      | Data signal of y                 |                                                                        |
| s_axi_control | y_2      | 0x20   | 32    | W      | Data signal of y                 |                                                                        |
| s_axi_control | load     | 0x28   | 32    | W      | Data signal of load              |                                                                        |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+------------+
| Argument | Direction | Datatype   |
+----------+-----------+------------+
| x_in     | inout     | ap_int<8>* |
| y        | inout     | ap_int<8>* |
| load     | in        | bool       |
+----------+-----------+------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+----------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                          |
+----------+---------------+-----------+----------+----------------------------------+
| x_in     | m_axi_gmem    | interface |          |                                  |
| x_in     | s_axi_control | register  | offset   | name=x_in_1 offset=0x10 range=32 |
| x_in     | s_axi_control | register  | offset   | name=x_in_2 offset=0x14 range=32 |
| y        | m_axi_gmem    | interface |          |                                  |
| y        | s_axi_control | register  | offset   | name=y_1 offset=0x1c range=32    |
| y        | s_axi_control | register  | offset   | name=y_2 offset=0x20 range=32    |
| load     | s_axi_control | register  |          | name=load offset=0x28 range=32   |
+----------+---------------+-----------+----------+----------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+--------+-------+----------------------------+
| HW Interface | Direction | Length | Width | Location                   |
+--------------+-----------+--------+-------+----------------------------+
| m_axi_gmem   | read      | 19200  | 512   | ../src/word_width.cpp:20:2 |
| m_axi_gmem   | write     | 6400   | 512   | ../src/word_width.cpp:25:2 |
+--------------+-----------+--------+-------+----------------------------+


================================================================
== Bind Op Report
================================================================
+------------------------------+-----+--------+------------+-----+--------+---------+
| Name                         | DSP | Pragma | Variable   | Op  | Impl   | Latency |
+------------------------------+-----+--------+------------+-----+--------+---------+
| + word_width                 | 0   |        |            |     |        |         |
|  + word_width_Pipeline_WRITE | 0   |        |            |     |        |         |
|    add_ln27_fu_136_p2        | -   |        | add_ln27   | add | fabric | 0       |
|    add_ln70_fu_191_p2        | -   |        | add_ln70   | add | tadder | 0       |
|    add_ln70_1_fu_197_p2      | -   |        | add_ln70_1 | add | tadder | 0       |
|  + word_width_Pipeline_LOAD  | 0   |        |            |     |        |         |
|    add_ln20_fu_177_p2        | -   |        | add_ln20   | add | fabric | 0       |
|    add_ln22_fu_218_p2        | -   |        | add_ln22   | add | fabric | 0       |
|    add_ln22_1_fu_252_p2      | -   |        | add_ln22_1 | add | fabric | 0       |
|    sub_ln22_fu_301_p2        | -   |        | sub_ln22   | sub | fabric | 0       |
|    sub_ln22_1_fu_331_p2      | -   |        | sub_ln22_1 | sub | fabric | 0       |
+------------------------------+-----+--------+------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
+-----------------------------------------+------+------+--------+-------------------------------------+---------+------+---------+
| Name                                    | BRAM | URAM | Pragma | Variable                            | Storage | Impl | Latency |
+-----------------------------------------+------+------+--------+-------------------------------------+---------+------+---------+
| + word_width                            | 608  | 0    |        |                                     |         |      |         |
|   word_width_ap_int_8_ap_int_8_bool_x_U | 550  | -    | pragma | word_width_ap_int_8_ap_int_8_bool_x | ram_t2p | bram | 1       |
+-----------------------------------------+------+------+--------+-------------------------------------+---------+------+---------+


================================================================
== User Pragma Report
================================================================
* Pragmas with Warnings
+--------------+--------------------------------------+---------------------------------------------+------------------------------------------------------------------------------+
| Type         | Options                              | Location                                    | Messages                                                                     |
+--------------+--------------------------------------+---------------------------------------------+------------------------------------------------------------------------------+
| bind_storage | variable=x_in type=RAM_T2P impl=AUTO | ../src/word_width.cpp:8 in word_width, x_in | The resource pragma (storage) on function argument, in 'call' is unsupported |
+--------------+--------------------------------------+---------------------------------------------+------------------------------------------------------------------------------+

* Valid Pragma Syntax
+---------------+--------------------------------------+-----------------------------------------------------------+
| Type          | Options                              | Location                                                  |
+---------------+--------------------------------------+-----------------------------------------------------------+
| bind_storage  | variable=x type=RAM_T2P impl=AUTO    | ../src/./word_width_mem.hpp:21 in word_width_mem<w, n>, x |
| bind_storage  | variable=y type=RAM_T2P impl=AUTO    | ../src/word_width.cpp:9 in word_width, y                  |
| array_reshape | variable=x cyclic factor=3 dim=1     | ../src/word_width.cpp:12 in word_width, x                 |
| bind_storage  | variable=x type=RAM_T2P impl=AUTO    | ../src/word_width.cpp:14 in word_width, x                 |
| pipeline      | II=1                                 | ../src/word_width.cpp:21 in word_width                    |
| pipeline      | II=1                                 | ../src/word_width.cpp:26 in word_width                    |
| bind_storage  | variable=x_in type=RAM_T2P impl=AUTO | ../src/word_width_manual.cpp:7 in word_width_manual, x_in |
| bind_storage  | variable=y type=RAM_T2P impl=AUTO    | ../src/word_width_manual.cpp:9 in word_width_manual, y    |
| pipeline      | II=1                                 | ../src/word_width_manual.cpp:18 in word_width_manual      |
| pipeline      | II=1                                 | ../src/word_width_manual.cpp:23 in word_width_manual      |
+---------------+--------------------------------------+-----------------------------------------------------------+


