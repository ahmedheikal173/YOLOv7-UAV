

================================================================
== Vitis HLS Report for 'word_width_Pipeline_LOAD'
================================================================
* Date:           Wed Jun  5 16:27:51 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        m3
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.864 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  Latency (cycles) |   Latency (absolute)  |      Interval     | Pipeline|
    |   min   |   max   |    min    |    max    |   min   |   max   |   Type  |
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  1228802|  1228802|  12.288 ms|  12.288 ms|  1228802|  1228802|       no|
    +---------+---------+-----------+-----------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+---------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+---------+----------+
        |- LOAD    |  1228800|  1228800|         2|          1|          1|  1228800|       yes|
        +----------+---------+---------+----------+-----------+-----------+---------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+---------------------+---------+------+---------+---------+-----+
|         Name        | BRAM_18K|  DSP |    FF   |   LUT   | URAM|
+---------------------+---------+------+---------+---------+-----+
|DSP                  |        -|     -|        -|        -|    -|
|Expression           |        -|     -|        0|      491|    -|
|FIFO                 |        -|     -|        -|        -|    -|
|Instance             |        -|     -|        -|        -|    -|
|Memory               |        -|     -|        -|        -|    -|
|Multiplexer          |        -|     -|        -|       63|    -|
|Register             |        -|     -|       87|        -|    -|
+---------------------+---------+------+---------+---------+-----+
|Total                |        0|     0|       87|      554|    0|
+---------------------+---------+------+---------+---------+-----+
|Available SLR        |     1344|  3072|   864000|   432000|  320|
+---------------------+---------+------+---------+---------+-----+
|Utilization SLR (%)  |        0|     0|       ~0|       ~0|    0|
+---------------------+---------+------+---------+---------+-----+
|Available            |     4032|  9216|  2592000|  1296000|  960|
+---------------------+---------+------+---------+---------+-----+
|Utilization (%)      |        0|     0|       ~0|       ~0|    0|
+---------------------+---------+------+---------+---------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------------------------+----------+----+---+----+------------+------------+
    |              Variable Name             | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------------------------+----------+----+---+----+------------+------------+
    |add_ln22_1_fu_155_p2                    |         +|   0|  0|  28|          21|           1|
    |add_ln22_fu_133_p2                      |         +|   0|  0|  28|          21|           1|
    |add_ln24_fu_175_p2                      |         +|   0|  0|  49|          42|          22|
    |sub_ln24_1_fu_254_p2                    |         -|   0|  0|  12|           5|           5|
    |sub_ln24_fu_224_p2                      |         -|   0|  0|  12|           5|           5|
    |and_ln24_fu_308_p2                      |       and|   0|  0|  24|          24|          24|
    |word_width_ap_int_8_ap_int_8_bool_x_d0  |       and|   0|  0|  24|          24|          24|
    |icmp_ln22_1_fu_161_p2                   |      icmp|   0|  0|  15|          21|           2|
    |icmp_ln22_fu_127_p2                     |      icmp|   0|  0|  15|          21|          21|
    |icmp_ln24_fu_214_p2                     |      icmp|   0|  0|   9|           5|           5|
    |lshr_ln24_fu_302_p2                     |      lshr|   0|  0|  67|           2|          24|
    |or_ln24_fu_208_p2                       |        or|   0|  0|   5|           5|           3|
    |select_ln22_fu_167_p3                   |    select|   0|  0|  21|           1|          21|
    |select_ln24_1_fu_238_p3                 |    select|   0|  0|   5|           1|           5|
    |select_ln24_2_fu_246_p3                 |    select|   0|  0|   5|           1|           5|
    |select_ln24_3_fu_288_p3                 |    select|   0|  0|  24|           1|          24|
    |select_ln24_fu_230_p3                   |    select|   0|  0|   5|           1|           5|
    |shl_ln24_1_fu_296_p2                    |       shl|   0|  0|  67|           2|          24|
    |shl_ln24_2_fu_325_p2                    |       shl|   0|  0|   7|           1|           3|
    |shl_ln24_fu_272_p2                      |       shl|   0|  0|  67|          24|          24|
    |ap_enable_pp0                           |       xor|   0|  0|   2|           1|           2|
    +----------------------------------------+----------+----+---+----+------------+------------+
    |Total                                   |          |   0|  0| 491|         229|         250|
    +----------------------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +-----------------------------------------+----+-----------+-----+-----------+
    |                   Name                  | LUT| Input Size| Bits| Total Bits|
    +-----------------------------------------+----+-----------+-----+-----------+
    |ap_done_int                              |   9|          2|    1|          2|
    |ap_enable_reg_pp0_iter1                  |   9|          2|    1|          2|
    |ap_sig_allocacmp_i_2                     |   9|          2|   21|         42|
    |i_fu_80                                  |   9|          2|   21|         42|
    |phi_mul_fu_76                            |   9|          2|   42|         84|
    |phi_urem_fu_72                           |   9|          2|   21|         42|
    |word_width_ap_int_8_ap_int_8_bool_x_we0  |   9|          2|    3|          6|
    +-----------------------------------------+----+-----------+-----+-----------+
    |Total                                    |  63|         14|  110|        220|
    +-----------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +-------------------------+----+----+-----+-----------+
    |           Name          | FF | LUT| Bits| Const Bits|
    +-------------------------+----+----+-----+-----------+
    |ap_CS_fsm                |   1|   0|    1|          0|
    |ap_done_reg              |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1  |   1|   0|    1|          0|
    |i_fu_80                  |  21|   0|   21|          0|
    |phi_mul_fu_76            |  42|   0|   42|          0|
    |phi_urem_fu_72           |  21|   0|   21|          0|
    +-------------------------+----+----+-----+-----------+
    |Total                    |  87|   0|   87|          0|
    +-------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+----------------------------------------------+-----+-----+------------+-------------------------------------+--------------+
|                   RTL Ports                  | Dir | Bits|  Protocol  |            Source Object            |    C Type    |
+----------------------------------------------+-----+-----+------------+-------------------------------------+--------------+
|ap_clk                                        |   in|    1|  ap_ctrl_hs|             word_width_Pipeline_LOAD|  return value|
|ap_rst                                        |   in|    1|  ap_ctrl_hs|             word_width_Pipeline_LOAD|  return value|
|ap_start                                      |   in|    1|  ap_ctrl_hs|             word_width_Pipeline_LOAD|  return value|
|ap_done                                       |  out|    1|  ap_ctrl_hs|             word_width_Pipeline_LOAD|  return value|
|ap_idle                                       |  out|    1|  ap_ctrl_hs|             word_width_Pipeline_LOAD|  return value|
|ap_ready                                      |  out|    1|  ap_ctrl_hs|             word_width_Pipeline_LOAD|  return value|
|x_in_Addr_A                                   |  out|   32|        bram|                                 x_in|         array|
|x_in_EN_A                                     |  out|    1|        bram|                                 x_in|         array|
|x_in_WEN_A                                    |  out|    1|        bram|                                 x_in|         array|
|x_in_Din_A                                    |  out|    8|        bram|                                 x_in|         array|
|x_in_Dout_A                                   |   in|    8|        bram|                                 x_in|         array|
|word_width_ap_int_8_ap_int_8_bool_x_address0  |  out|   19|   ap_memory|  word_width_ap_int_8_ap_int_8_bool_x|         array|
|word_width_ap_int_8_ap_int_8_bool_x_ce0       |  out|    1|   ap_memory|  word_width_ap_int_8_ap_int_8_bool_x|         array|
|word_width_ap_int_8_ap_int_8_bool_x_we0       |  out|    3|   ap_memory|  word_width_ap_int_8_ap_int_8_bool_x|         array|
|word_width_ap_int_8_ap_int_8_bool_x_d0        |  out|   24|   ap_memory|  word_width_ap_int_8_ap_int_8_bool_x|         array|
+----------------------------------------------+-----+-----+------------+-------------------------------------+--------------+

