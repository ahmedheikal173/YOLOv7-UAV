

================================================================
== Vitis HLS Report for 'word_width_manual_Pipeline_WRITE'
================================================================
* Date:           Mon Jun  3 15:16:40 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        m3
* Solution:       solution1 (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   409603|   409603|  4.096 ms|  4.096 ms|  409603|  409603|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+--------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+--------+----------+
        |- WRITE   |   409601|   409601|         3|          1|          1|  409600|       yes|
        +----------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%phi_ln22 = alloca i32 1"   --->   Operation 6 'alloca' 'phi_ln22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%t_V = alloca i32 1"   --->   Operation 7 'alloca' 't_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i_V = alloca i32 1"   --->   Operation 8 'alloca' 'i_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_Val2_s = alloca i32 1"   --->   Operation 9 'alloca' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%x_read3_V_new_0 = alloca i32 1"   --->   Operation 10 'alloca' 'x_read3_V_new_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sext_ln20_read = read i58 @_ssdm_op_Read.ap_auto.i58, i58 %sext_ln20"   --->   Operation 11 'read' 'sext_ln20_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%x_sel_rd_V_load_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %x_sel_rd_V_load"   --->   Operation 12 'read' 'x_sel_rd_V_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%x_read = read i24 @_ssdm_op_Read.ap_auto.i24, i24 %x_read3_V_load"   --->   Operation 13 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln20_cast = sext i58 %sext_ln20_read"   --->   Operation 14 'sext' 'sext_ln20_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i24 %x_x_V, i64 666, i64 18, i64 18446744073709551615"   --->   Operation 15 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i512 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 64, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.46ns)   --->   "%store_ln0 = store i24 %x_read, i24 %p_Val2_s"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 18 [1/1] (0.46ns)   --->   "%store_ln0 = store i19 0, i19 %i_V"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 19 [1/1] (0.46ns)   --->   "%store_ln0 = store i2 %x_sel_rd_V_load_read, i2 %t_V"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 20 [1/1] (0.46ns)   --->   "%store_ln0 = store i504 0, i504 %phi_ln22"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 21 [1/1] (0.46ns)   --->   "%br_ln0 = br void"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%i_V_1 = load i19 %i_V" [../src/word_width_manual.cpp:20]   --->   Operation 22 'load' 'i_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.92ns)   --->   "%icmp_ln20 = icmp_eq  i19 %i_V_1, i19 409600" [../src/word_width_manual.cpp:20]   --->   Operation 23 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.12ns)   --->   "%i = add i19 %i_V_1, i19 1" [../src/word_width_manual.cpp:22]   --->   Operation 24 'add' 'i' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln20 = br i1 %icmp_ln20, void %.split7_ifconv, void %.loopexit.loopexit95.exitStub" [../src/word_width_manual.cpp:20]   --->   Operation 25 'br' 'br_ln20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln20 = trunc i19 %i_V_1" [../src/word_width_manual.cpp:20]   --->   Operation 26 'trunc' 'trunc_ln20' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln587 = zext i19 %i_V_1"   --->   Operation 27 'zext' 'zext_ln587' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%x_x_V_addr = getelementptr i24 %x_x_V, i64 0, i64 %zext_ln587" [../src/ww_read_mem.hpp:20]   --->   Operation 28 'getelementptr' 'x_x_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (1.29ns)   --->   "%x_x_V_load = load i19 %x_x_V_addr" [../src/ww_read_mem.hpp:20]   --->   Operation 29 'load' 'x_x_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.29> <CoreInst = "RAM_1P_BRAM">   --->   Core 90 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 24> <Depth = 409600> <RAM>
ST_1 : Operation 30 [1/1] (0.71ns)   --->   "%icmp_ln22 = icmp_eq  i6 %trunc_ln20, i6 63" [../src/word_width_manual.cpp:22]   --->   Operation 30 'icmp' 'icmp_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln22 = br i1 %icmp_ln22, void %_ZN14word_width_memILi8ELi1228800EE4readE7ap_uintILi21EEi.exit94._crit_edge, void" [../src/word_width_manual.cpp:22]   --->   Operation 31 'br' 'br_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.46ns)   --->   "%store_ln22 = store i19 %i, i19 %i_V" [../src/word_width_manual.cpp:22]   --->   Operation 32 'store' 'store_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.46>

State 2 <SV = 1> <Delay = 4.55>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%x_read3_V_flag_0 = phi i1 0, void %newFuncRoot, i1 %or_ln1064_2, void %_ZN14word_width_memILi8ELi1228800EE4readE7ap_uintILi21EEi.exit94._crit_edge"   --->   Operation 33 'phi' 'x_read3_V_flag_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i512 %gmem"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i512 %gmem, i64 %sext_ln20_cast" [../src/word_width_manual.cpp:20]   --->   Operation 35 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 409600, i64 409600, i64 409600"   --->   Operation 36 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%t_V_load = load i2 %t_V"   --->   Operation 37 'load' 't_V_load' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%p_Val2_load = load i24 %p_Val2_s"   --->   Operation 38 'load' 'p_Val2_load' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%x_read3_V_new_0_load_1 = load i24 %x_read3_V_new_0"   --->   Operation 39 'load' 'x_read3_V_new_0_load_1' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.62ns)   --->   "%add_ln885 = add i2 %t_V_load, i2 1"   --->   Operation 40 'add' 'add_ln885' <Predicate = (!icmp_ln20)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.39ns)   --->   "%icmp_ln1064 = icmp_eq  i2 %t_V_load, i2 0"   --->   Operation 41 'icmp' 'icmp_ln1064' <Predicate = (!icmp_ln20)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/2] (1.29ns)   --->   "%x_x_V_load = load i19 %x_x_V_addr" [../src/ww_read_mem.hpp:20]   --->   Operation 42 'load' 'x_x_V_load' <Predicate = (!icmp_ln20)> <Delay = 1.29> <CoreInst = "RAM_1P_BRAM">   --->   Core 90 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 24> <Depth = 409600> <RAM>
ST_2 : Operation 43 [1/1] (0.31ns)   --->   "%p_Val2_1 = select i1 %icmp_ln1064, i24 %x_x_V_load, i24 %p_Val2_load"   --->   Operation 43 'select' 'p_Val2_1' <Predicate = (!icmp_ln20)> <Delay = 0.31> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.39ns)   --->   "%icmp_ln1064_1 = icmp_eq  i2 %add_ln885, i2 3"   --->   Operation 44 'icmp' 'icmp_ln1064_1' <Predicate = (!icmp_ln20)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.34ns)   --->   "%t_V_1 = select i1 %icmp_ln1064_1, i2 0, i2 %add_ln885" [../src/ww_read_mem.hpp:22]   --->   Operation 45 'select' 't_V_1' <Predicate = (!icmp_ln20)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_V = trunc i24 %p_Val2_1"   --->   Operation 46 'trunc' 'tmp_V' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.62ns)   --->   "%add_ln885_1 = add i2 %t_V_1, i2 1"   --->   Operation 47 'add' 'add_ln885_1' <Predicate = (!icmp_ln20)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.39ns)   --->   "%icmp_ln1064_2 = icmp_eq  i2 %t_V_1, i2 0"   --->   Operation 48 'icmp' 'icmp_ln1064_2' <Predicate = (!icmp_ln20)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.31ns)   --->   "%p_Val2_2 = select i1 %icmp_ln1064_2, i24 %x_x_V_load, i24 %p_Val2_1"   --->   Operation 49 'select' 'p_Val2_2' <Predicate = (!icmp_ln20)> <Delay = 0.31> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.39ns)   --->   "%icmp_ln1064_3 = icmp_eq  i2 %add_ln885_1, i2 3"   --->   Operation 50 'icmp' 'icmp_ln1064_3' <Predicate = (!icmp_ln20)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.34ns)   --->   "%t_V_2 = select i1 %icmp_ln1064_3, i2 0, i2 %add_ln885_1" [../src/ww_read_mem.hpp:22]   --->   Operation 51 'select' 't_V_2' <Predicate = (!icmp_ln20)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_V_1 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %p_Val2_2, i32 8, i32 15"   --->   Operation 52 'partselect' 'tmp_V_1' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.62ns)   --->   "%add_ln885_2 = add i2 %t_V_2, i2 1"   --->   Operation 53 'add' 'add_ln885_2' <Predicate = (!icmp_ln20)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.39ns)   --->   "%icmp_ln1064_4 = icmp_eq  i2 %t_V_2, i2 0"   --->   Operation 54 'icmp' 'icmp_ln1064_4' <Predicate = (!icmp_ln20)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.14ns)   --->   "%or_ln1064 = or i1 %icmp_ln1064_2, i1 %icmp_ln1064_4"   --->   Operation 55 'or' 'or_ln1064' <Predicate = (!icmp_ln20)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node or_ln1064_2)   --->   "%or_ln1064_1 = or i1 %or_ln1064, i1 %icmp_ln1064"   --->   Operation 56 'or' 'or_ln1064_1' <Predicate = (!icmp_ln20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln1064_2 = or i1 %x_read3_V_flag_0, i1 %or_ln1064_1"   --->   Operation 57 'or' 'or_ln1064_2' <Predicate = (!icmp_ln20)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln1064_1)   --->   "%select_ln1064 = select i1 %icmp_ln1064, i24 %x_x_V_load, i24 %x_read3_V_new_0_load_1"   --->   Operation 58 'select' 'select_ln1064' <Predicate = (!icmp_ln20)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.31ns) (out node of the LUT)   --->   "%select_ln1064_1 = select i1 %or_ln1064, i24 %x_x_V_load, i24 %select_ln1064"   --->   Operation 59 'select' 'select_ln1064_1' <Predicate = (!icmp_ln20)> <Delay = 0.31> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.31ns)   --->   "%p_Val2_3 = select i1 %icmp_ln1064_4, i24 %x_x_V_load, i24 %p_Val2_2"   --->   Operation 60 'select' 'p_Val2_3' <Predicate = (!icmp_ln20)> <Delay = 0.31> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.39ns)   --->   "%icmp_ln1064_5 = icmp_eq  i2 %add_ln885_2, i2 3"   --->   Operation 61 'icmp' 'icmp_ln1064_5' <Predicate = (!icmp_ln20)> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.34ns)   --->   "%select_ln22 = select i1 %icmp_ln1064_5, i2 0, i2 %add_ln885_2" [../src/ww_read_mem.hpp:22]   --->   Operation 62 'select' 'select_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_V_2 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %p_Val2_3, i32 16, i32 23"   --->   Operation 63 'partselect' 'tmp_V_2' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln70 = add i8 %tmp_V_1, i8 %tmp_V"   --->   Operation 64 'add' 'add_ln70' <Predicate = (!icmp_ln20)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 65 [1/1] (1.02ns) (root node of TernaryAdder)   --->   "%add_ln70_1 = add i8 %add_ln70, i8 %tmp_V_2"   --->   Operation 65 'add' 'add_ln70_1' <Predicate = (!icmp_ln20)> <Delay = 1.02> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%store_ln1064 = store i24 %select_ln1064_1, i24 %x_read3_V_new_0"   --->   Operation 66 'store' 'store_ln1064' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.46ns)   --->   "%store_ln1064 = store i24 %p_Val2_3, i24 %p_Val2_s"   --->   Operation 67 'store' 'store_ln1064' <Predicate = (!icmp_ln20)> <Delay = 0.46>
ST_2 : Operation 68 [1/1] (0.46ns)   --->   "%store_ln22 = store i2 %select_ln22, i2 %t_V" [../src/ww_read_mem.hpp:22]   --->   Operation 68 'store' 'store_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.46>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%t_V_load_1 = load i2 %t_V"   --->   Operation 81 'load' 't_V_load_1' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%x_read3_V_new_0_load = load i24 %x_read3_V_new_0"   --->   Operation 82 'load' 'x_read3_V_new_0_load' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%write_ln1064 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %x_read3_V_flag_0_out, i1 %x_read3_V_flag_0"   --->   Operation 83 'write' 'write_ln1064' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i24P0A, i24 %x_read3_V_new_0_out, i24 %x_read3_V_new_0_load"   --->   Operation 84 'write' 'write_ln0' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i2P0A, i2 %t_V_out, i2 %t_V_load_1"   --->   Operation 85 'write' 'write_ln0' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 86 'ret' 'ret_ln0' <Predicate = (icmp_ln20)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%phi_ln22_load_1 = load i504 %phi_ln22" [../src/word_width_manual.cpp:22]   --->   Operation 69 'load' 'phi_ln22_load_1' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%specpipeline_ln321 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0"   --->   Operation 70 'specpipeline' 'specpipeline_ln321' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%specloopname_ln321 = specloopname void @_ssdm_op_SpecLoopName, void @empty_13"   --->   Operation 71 'specloopname' 'specloopname_ln321' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i512 @_ssdm_op_BitConcatenate.i512.i8.i504, i8 %add_ln70_1, i504 %phi_ln22_load_1" [../src/word_width_manual.cpp:22]   --->   Operation 72 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (7.30ns)   --->   "%write_ln22 = write void @_ssdm_op_Write.m_axi.p1i512, i512 %gmem_addr, i512 %or_ln, i64 18446744073709551615" [../src/word_width_manual.cpp:22]   --->   Operation 73 'write' 'write_ln22' <Predicate = (icmp_ln22)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln22 = br void %_ZN14word_width_memILi8ELi1228800EE4readE7ap_uintILi21EEi.exit94._crit_edge" [../src/word_width_manual.cpp:22]   --->   Operation 74 'br' 'br_ln22' <Predicate = (icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%phi_ln22_load = load i504 %phi_ln22"   --->   Operation 75 'load' 'phi_ln22_load' <Predicate = (!icmp_ln20 & !icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%tmp = partselect i496 @_ssdm_op_PartSelect.i496.i504.i32.i32, i504 %phi_ln22_load, i32 8, i32 503"   --->   Operation 76 'partselect' 'tmp' <Predicate = (!icmp_ln20 & !icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i504 @_ssdm_op_BitConcatenate.i504.i8.i496, i8 %add_ln70_1, i496 %tmp"   --->   Operation 77 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln20 & !icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.60ns)   --->   "%select_ln22_3 = select i1 %icmp_ln22, i504 0, i504 %tmp_1" [../src/word_width_manual.cpp:22]   --->   Operation 78 'select' 'select_ln22_3' <Predicate = (!icmp_ln20)> <Delay = 0.60> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.46ns)   --->   "%store_ln22 = store i504 %select_ln22_3, i504 %phi_ln22" [../src/word_width_manual.cpp:22]   --->   Operation 79 'store' 'store_ln22' <Predicate = (!icmp_ln20)> <Delay = 0.46>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 80 'br' 'br_ln0' <Predicate = (!icmp_ln20)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.58ns
The critical path consists of the following:
	'alloca' operation ('val') [11]  (0 ns)
	'load' operation ('val', ../src/word_width_manual.cpp:20) on local variable 'val' [27]  (0 ns)
	'add' operation ('i', ../src/word_width_manual.cpp:22) [32]  (1.12 ns)
	'store' operation ('store_ln22', ../src/word_width_manual.cpp:22) of variable 'i', ../src/word_width_manual.cpp:22 on local variable 'val' [83]  (0.46 ns)

 <State 2>: 4.55ns
The critical path consists of the following:
	'load' operation ('t_V_load') on local variable 't.V' [36]  (0 ns)
	'add' operation ('add_ln885') [42]  (0.621 ns)
	'icmp' operation ('icmp_ln1064_1') [48]  (0.399 ns)
	'select' operation ('t.V', ../src/ww_read_mem.hpp:22) [49]  (0.345 ns)
	'add' operation ('add_ln885_1') [51]  (0.621 ns)
	'icmp' operation ('icmp_ln1064_3') [54]  (0.399 ns)
	'select' operation ('t.V', ../src/ww_read_mem.hpp:22) [55]  (0.345 ns)
	'add' operation ('add_ln885_2') [57]  (0.621 ns)
	'icmp' operation ('icmp_ln1064_5') [65]  (0.399 ns)
	'select' operation ('select_ln22', ../src/ww_read_mem.hpp:22) [66]  (0.345 ns)
	'store' operation ('store_ln22', ../src/ww_read_mem.hpp:22) of variable 'select_ln22', ../src/ww_read_mem.hpp:22 on local variable 't.V' [84]  (0.46 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	'load' operation ('phi_ln22_load_1', ../src/word_width_manual.cpp:22) on local variable 'phi_ln22' [35]  (0 ns)
	bus write operation ('write_ln22', ../src/word_width_manual.cpp:22) on port 'gmem' (../src/word_width_manual.cpp:22) [74]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
