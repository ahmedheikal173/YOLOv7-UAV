

================================================================
== Synthesis Summary Report of 'circular_shift_reg'
================================================================
+ General Information: 
    * Date:           Wed Jun  5 09:56:19 2024
    * Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
    * Project:        m1
    * Solution:       solution1 (Vitis Kernel Flow Target)
    * Product family: zynquplus
    * Target device:  xczu7ev-ffvc1156-2-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------------------------+--------+-------+---------+---------+----------+---------+------+----------+---------+----+-----------+------------+-----+
    |                Modules               |  Issue |       | Latency | Latency | Iteration|         | Trip |          |         |    |           |            |     |
    |                & Loops               |  Type  | Slack | (cycles)|   (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   | DSP|     FF    |     LUT    | URAM|
    +--------------------------------------+--------+-------+---------+---------+----------+---------+------+----------+---------+----+-----------+------------+-----+
    |+ circular_shift_reg                  |  Timing|  -0.00|       83|  830.000|         -|       84|     -|        no|  3 (~0%)|   -|  779 (~0%)|  1602 (~0%)|    -|
    | + circular_shift_reg_Pipeline_WRITE  |  Timing|  -0.00|       12|  120.000|         -|       12|     -|        no|        -|   -|   17 (~0%)|    98 (~0%)|    -|
    |  o WRITE                             |       -|   7.30|       10|  100.000|         3|        1|     9|       yes|        -|   -|          -|           -|    -|
    +--------------------------------------+--------+-------+---------+---------+----------+---------+------+----------+---------+----+-----------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem | 8 -> 8     | 64            | 64      | slave  | 0        | 512       | 16           | 16           | 16          | 16          | BRAM=2            |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                             |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                               |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN 5=CHAN2_INT_EN                           |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST 5=CHAN2_INT_ST                           |
| s_axi_control | din      | 0x10   | 32    | W      | Data signal of din               |                                                                        |
| s_axi_control | dout_1   | 0x18   | 32    | W      | Data signal of dout              |                                                                        |
| s_axi_control | dout_2   | 0x1c   | 32    | W      | Data signal of dout              |                                                                        |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+-------------+
| Argument | Direction | Datatype    |
+----------+-----------+-------------+
| din      | in        | ap_uint<8>  |
| dout     | out       | ap_uint<8>* |
+----------+-----------+-------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+----------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                          |
+----------+---------------+-----------+----------+----------------------------------+
| din      | s_axi_control | register  |          | name=din offset=0x10 range=32    |
| dout     | m_axi_gmem    | interface |          |                                  |
| dout     | s_axi_control | register  | offset   | name=dout_1 offset=0x18 range=32 |
| dout     | s_axi_control | register  | offset   | name=dout_2 offset=0x1c range=32 |
+----------+---------------+-----------+----------+----------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-------+-----------+--------+-------+---------------------------+
| HW Interface | Loop  | Direction | Length | Width | Location                  |
+--------------+-------+-----------+--------+-------+---------------------------+
| m_axi_gmem   | WRITE | write     | 9      | 8     | ../src/shift_reg.cpp:13:3 |
+--------------+-------+-----------+--------+-------+---------------------------+

* Inferred Bursts and Widening Missed
+--------------+----------+-------+------------------------------------------------+------------+---------------------------+
| HW Interface | Variable | Loop  | Problem                                        | Resolution | Location                  |
+--------------+----------+-------+------------------------------------------------+------------+---------------------------+
| m_axi_gmem   | dout     | WRITE | Sequential access length is not divisible by 2 | 214-234    | ../src/shift_reg.cpp:13:3 |
+--------------+----------+-------+------------------------------------------------+------------+---------------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+--------------------------------------+-----+--------+------------+-----+--------+---------+
| Name                                 | DSP | Pragma | Variable   | Op  | Impl   | Latency |
+--------------------------------------+-----+--------+------------+-----+--------+---------+
| + circular_shift_reg                 | 0   |        |            |     |        |         |
|   add_ln885_fu_135_p2                | -   |        | add_ln885  | add | fabric | 0       |
|   add_ln70_fu_160_p2                 | -   |        | add_ln70   | add | fabric | 0       |
|  + circular_shift_reg_Pipeline_WRITE | 0   |        |            |     |        |         |
|    i_fu_125_p2                       | -   |        | i          | add | fabric | 0       |
|    sub_ln70_fu_135_p2                | -   |        | sub_ln70   | sub | fabric | 0       |
|    add_ln70_1_fu_153_p2              | -   |        | add_ln70_1 | add | fabric | 0       |
+--------------------------------------+-----+--------+------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
+----------------------+------+------+--------+------------+---------+------+---------+
| Name                 | BRAM | URAM | Pragma | Variable   | Storage | Impl | Latency |
+----------------------+------+------+--------+------------+---------+------+---------+
| + circular_shift_reg | 3    | 0    |        |            |         |      |         |
|   regs_mem_V_U       | 1    | -    | pragma | regs_mem_V | ram_t2p | bram | 1       |
+----------------------+------+------+--------+------------+---------+------+---------+


================================================================
== User Pragma Report
================================================================
* Valid Pragma Syntax
+--------------+-------------------------------------+-----------------------------------------------------------+
| Type         | Options                             | Location                                                  |
+--------------+-------------------------------------+-----------------------------------------------------------+
| bind_storage | variable=mem type=RAM_T2P impl=AUTO | ../src/./circular_shift.h:23 in circular_shift<t, n>, mem |
| pipeline     |                                     | ../src/./circular_shift.h:30 in circular_shift<t, n>      |
| pipeline     |                                     | ../src/shift_reg.cpp:15 in circular_shift_reg             |
+--------------+-------------------------------------+-----------------------------------------------------------+


