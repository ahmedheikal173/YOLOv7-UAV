<xilinx:hls_fe_msgs>
    <msg msg_groups="PRAGMA_INVALID" msg_id="207-5523" msg_severity="WARNING" msg_loc="../src/./circular_shift.h:20:9" msg_body="'Resource pragma' is deprecated, use 'bind_op/bind_storage pragma' instead">
        <args ClangWarningOption="ignored-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_ref.h:718:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="and_reduce" ARG_PragmaIsValid="1" ARG_PragmaType="unroll" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_ref.h:732:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="or_reduce" ARG_PragmaIsValid="1" ARG_PragmaType="unroll" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_ref.h:746:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="xor_reduce" ARG_PragmaIsValid="1" ARG_PragmaType="unroll" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="../src/./circular_shift.h:20:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="circular_shift&lt;T, N&gt;" ARG_PragmaIsValid="1" ARG_PragmaOptions="variable=mem core=RAM_1P_BRAM" ARG_PragmaType="resource" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="../src/shift_reg.cpp:6:9" msg_body="HLS pragma dump">
        <args ARG_PragmaContext="directive" ARG_PragmaFunction="circular_shift_reg" ARG_PragmaIsValid="1" ARG_PragmaOptions="name=circular_shift_reg" ARG_PragmaType="top" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:16" msg_body="Inlining function 'ap_int_base&lt;1, false&gt;::ap_int_base(int)' into 'ap_int_base&lt;22, true&gt;::operator++(int)'">
        <args Callee="ap_int_base&lt;1, false&gt;::ap_int_base(int)" Caller="ap_int_base&lt;22, true&gt;::operator++(int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:924:5" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;&amp; ap_int_base&lt;22, true&gt;::operator+=&lt;1, false&gt;(ap_int_base&lt;1, false&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::operator++(int)'">
        <args Callee="ap_int_base&lt;22, true&gt;&amp; ap_int_base&lt;22, true&gt;::operator+=&lt;1, false&gt;(ap_int_base&lt;1, false&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::operator++(int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1853" msg_body="Inlining function 'ap_int_base&lt;32, true&gt;::ap_int_base(int)' into 'bool operator==&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="ap_int_base&lt;32, true&gt;::ap_int_base(int)" Caller="bool operator==&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:1850" msg_body="Inlining function 'bool ap_int_base&lt;22, true&gt;::operator==&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;) const' into 'bool operator==&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="bool ap_int_base&lt;22, true&gt;::operator==&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;) const" Caller="bool operator==&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:29:9" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::operator long long() const' into 'circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)'">
        <args Callee="ap_int_base&lt;22, true&gt;::operator long long() const" Caller="circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:31:14" msg_body="Inlining function 'bool operator==&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)' into 'circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)'">
        <args Callee="bool operator==&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)" Caller="circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:30:5" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::operator++(int)' into 'circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)'">
        <args Callee="ap_int_base&lt;22, true&gt;::operator++(int)" Caller="circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341" msg_body="Inlining function 'ap_int_base&lt;33, true&gt;::ap_int_base&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::minus operator-&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)'">
        <args Callee="ap_int_base&lt;33, true&gt;::ap_int_base&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::minus operator-&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430" msg_body="Inlining function 'ap_int_base&lt;33, true&gt;::ap_int_base&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::minus operator-&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)'">
        <args Callee="ap_int_base&lt;33, true&gt;::ap_int_base&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::minus operator-&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1531" msg_body="Inlining function 'ap_int_base&lt;32, true&gt;::ap_int_base(int)' into 'ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::minus operator-&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="ap_int_base&lt;32, true&gt;::ap_int_base(int)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::minus operator-&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1529" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::minus operator-&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::minus operator-&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::minus operator-&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::minus operator-&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:341" msg_body="Inlining function 'ap_int_base&lt;34, true&gt;::ap_int_base&lt;33, true&gt;(ap_int_base&lt;33, true&gt; const&amp;)' into 'ap_int_base&lt;33, true&gt;::RType&lt;21, false&gt;::minus operator-&lt;33, true, 21, false&gt;(ap_int_base&lt;33, true&gt; const&amp;, ap_int_base&lt;21, false&gt; const&amp;)'">
        <args Callee="ap_int_base&lt;34, true&gt;::ap_int_base&lt;33, true&gt;(ap_int_base&lt;33, true&gt; const&amp;)" Caller="ap_int_base&lt;33, true&gt;::RType&lt;21, false&gt;::minus operator-&lt;33, true, 21, false&gt;(ap_int_base&lt;33, true&gt; const&amp;, ap_int_base&lt;21, false&gt; const&amp;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1541:430" msg_body="Inlining function 'ap_int_base&lt;34, true&gt;::ap_int_base&lt;21, false&gt;(ap_int_base&lt;21, false&gt; const&amp;)' into 'ap_int_base&lt;33, true&gt;::RType&lt;21, false&gt;::minus operator-&lt;33, true, 21, false&gt;(ap_int_base&lt;33, true&gt; const&amp;, ap_int_base&lt;21, false&gt; const&amp;)'">
        <args Callee="ap_int_base&lt;34, true&gt;::ap_int_base&lt;21, false&gt;(ap_int_base&lt;21, false&gt; const&amp;)" Caller="ap_int_base&lt;33, true&gt;::RType&lt;21, false&gt;::minus operator-&lt;33, true, 21, false&gt;(ap_int_base&lt;33, true&gt; const&amp;, ap_int_base&lt;21, false&gt; const&amp;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:713" msg_body="Inlining function 'ap_int_base&lt;32, true&gt;::ap_int_base(int)' into 'bool operator&lt;&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="ap_int_base&lt;32, true&gt;::ap_int_base(int)" Caller="bool operator&lt;&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1810:711" msg_body="Inlining function 'bool ap_int_base&lt;22, true&gt;::operator&lt;&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;) const' into 'bool operator&lt;&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="bool ap_int_base&lt;22, true&gt;::operator&lt;&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;) const" Caller="bool operator&lt;&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:339" msg_body="Inlining function 'ap_int_base&lt;33, true&gt;::ap_int_base&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::plus operator+&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)'">
        <args Callee="ap_int_base&lt;33, true&gt;::ap_int_base&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::plus operator+&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1540:427" msg_body="Inlining function 'ap_int_base&lt;33, true&gt;::ap_int_base&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::plus operator+&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)'">
        <args Callee="ap_int_base&lt;33, true&gt;::ap_int_base&lt;32, true&gt;(ap_int_base&lt;32, true&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::plus operator+&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1006" msg_body="Inlining function 'ap_int_base&lt;32, true&gt;::ap_int_base(int)' into 'ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::plus operator+&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="ap_int_base&lt;32, true&gt;::ap_int_base(int)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::plus operator+&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="C:/Xilinx/Vitis_HLS/2021.2/common/technology/autopilot\ap_int_base.h:1655:1004" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::plus operator+&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)' into 'ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::plus operator+&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)'">
        <args Callee="ap_int_base&lt;22, true&gt;::RType&lt;32, true&gt;::plus operator+&lt;22, true, 32, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, ap_int_base&lt;32, true&gt; const&amp;)" Caller="ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::plus operator+&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:35:18" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::minus operator-&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)' into 'circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)'">
        <args Callee="ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::minus operator-&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)" Caller="circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:37:16" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::operator long long() const' into 'circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)'">
        <args Callee="ap_int_base&lt;22, true&gt;::operator long long() const" Caller="circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:36:31" msg_body="Inlining function 'ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::plus operator+&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)' into 'circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)'">
        <args Callee="ap_int_base&lt;22, true&gt;::RType&lt;($_0)32, true&gt;::plus operator+&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)" Caller="circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:36:14" msg_body="Inlining function 'bool operator&lt;&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)' into 'circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)'">
        <args Callee="bool operator&lt;&lt;22, true&gt;(ap_int_base&lt;22, true&gt; const&amp;, int)" Caller="circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="../src/./circular_shift.h:35:22" msg_body="Inlining function 'ap_int_base&lt;33, true&gt;::RType&lt;21, false&gt;::minus operator-&lt;33, true, 21, false&gt;(ap_int_base&lt;33, true&gt; const&amp;, ap_int_base&lt;21, false&gt; const&amp;)' into 'circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)'">
        <args Callee="ap_int_base&lt;33, true&gt;::RType&lt;21, false&gt;::minus operator-&lt;33, true, 21, false&gt;(ap_int_base&lt;33, true&gt; const&amp;, ap_int_base&lt;21, false&gt; const&amp;)" Caller="circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="../src/shift_reg.cpp:5:0" msg_body="Inlining function 'circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)' into 'circular_shift_reg(int, int*)'">
        <args Callee="circular_shift&lt;int, 16&gt;::operator&lt;&lt;(int)" Caller="circular_shift_reg(int, int*)"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="../src/shift_reg.cpp:5:0" msg_body="Inlining function 'circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)' into 'circular_shift_reg(int, int*)'">
        <args Callee="circular_shift&lt;int, 16&gt;::operator[](ap_uint&lt;21&gt;)" Caller="circular_shift_reg(int, int*)"/>
    </msg>
</xilinx:hls_fe_msgs>

